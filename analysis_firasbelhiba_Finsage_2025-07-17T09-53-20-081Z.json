{
  "analysisDate": "2025-07-17T09:53:20.082Z",
  "repository": "firasbelhiba/Finsage",
  "template": "nodejs",
  "results": {
    "repoName": "FinSage",
    "criteriaResults": {
      "codeQuality": 5,
      "documentation": 0,
      "functionality": 8,
      "innovation": 0,
      "userExperience": 5
    },
    "feedbacks": {
      "codeQuality": "⚠️ Partial entry_points structure (2/3)\n❌ Incomplete configuration structure (0/2)\n✅ Complete mvc_pattern structure\n✅ Complete middleware structure\n❌ Incomplete utilities structure (1/3)\n❌ Incomplete types structure (0/1)\n❌ Incomplete testing structure (0/3)\n❌ Incomplete documentation structure (0/3)\n❌ Incomplete scripts structure (0/1)\n❌ Incomplete public_assets structure (0/1)\n❌ Incomplete uploads structure (0/1)\n❌ Incomplete environment structure (0/2)\n❌ Incomplete deployment structure (0/2)\n❌ Incomplete database structure (0/3)\n❌ Incomplete logs structure (0/2)\n✅ Excellent code documentation\n✅ Consistent code formatting\n✅ Proper error handling\n✅ Type safety implemented\n✅ Security packages included",
      "documentation": "❌ No README file found",
      "functionality": "✅ Database connection configured\n✅ API routes defined\n✅ Authentication system\n✅ 6 route files found\n✅ Database ORM included\n✅ Express.js framework\n✅ Environment configuration\n✅ Server configuration",
      "innovation": "",
      "userExperience": "✅ Error handling for better UX\n✅ CORS configured for frontend integration"
    },
    "finalScore": "3.6",
    "comprehensiveAnalysis": {
      "projectType": "nodejs",
      "files": {
        "package.json": {
          "content": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A budget tracking application\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"dev\": \"nodemon index.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bcryptjs\": \"^2.4.3\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.0.3\",\n    \"express\": \"^4.18.2\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"mongoose\": \"^7.0.3\",\n    \"next-themes\": \"^0.4.6\",\n    \"node-cron\": \"^4.1.0\",\n    \"recharts\": \"^2.15.3\",\n    \"validator\": \"^13.9.0\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.22\"\n  }\n}\n",
          "size": 602,
          "lines": 29,
          "type": "json"
        },
        "package-lock.json": {
          "content": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"budget-tracker\",\n      \"version\": \"1.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"bcryptjs\": \"^2.4.3\",\n        \"cors\": \"^2.8.5\",\n        \"dotenv\": \"^16.0.3\",\n        \"express\": \"^4.18.2\",\n        \"jsonwebtoken\": \"^9.0.0\",\n        \"mongoose\": \"^7.0.3\",\n        \"next-themes\": \"^0.4.6\",\n        \"node-cron\": \"^4.1.0\",\n        \"recharts\": \"^2.15.3\",\n        \"validator\": \"^13.9.0\"\n      },\n      \"devDependencies\": {\n        \"nodemon\": \"^2.0.22\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz\",\n      \"integrity\": \"sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@mongodb-js/saslprep\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz\",\n      \"integrity\": \"sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"sparse-bitfield\": \"^3.0.3\"\n      }\n    },\n    \"node_modules/@types/d3-array\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz\",\n      \"integrity\": \"sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-color\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz\",\n      \"integrity\": \"sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-ease\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz\",\n      \"integrity\": \"sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-interpolate\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz\",\n      \"integrity\": \"sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-color\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-path\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz\",\n      \"integrity\": \"sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-scale\": {\n      \"version\": \"4.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz\",\n      \"integrity\": \"sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-time\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-shape\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz\",\n      \"integrity\": \"sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-path\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-time\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz\",\n      \"integrity\": \"sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-timer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz\",\n      \"integrity\": \"sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"24.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-24.0.1.tgz\",\n      \"integrity\": \"sha512-MX4Zioh39chHlDJbKmEgydJDS3tspMP/lnQC67G3SWsTnb9NeYVWOjkxpOSy4oMfPs4StcWHwBrvUb4ybfnuaw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"undici-types\": \"~7.8.0\"\n      }\n    },\n    \"node_modules/@types/webidl-conversions\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz\",\n      \"integrity\": \"sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/whatwg-url\": {\n      \"version\": \"8.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz\",\n      \"integrity\": \"sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"@types/webidl-conversions\": \"*\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/bcryptjs\": {\n      \"version\": \"2.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\n      \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.13.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bson\": {\n      \"version\": \"5.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/bson/-/bson-5.5.1.tgz\",\n      \"integrity\": \"sha512-ix0EwukN2EpC0SRWIj/7B5+A6uQMQy6KMREI9qQqvgpkV2frH63T0UDVd1SYedL6dNCmDBYB3QtXi4ISk9YT+g==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      }\n    },\n    \"node_modules/buffer-equal-constant-time\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\n      \"integrity\": \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/clsx\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz\",\n      \"integrity\": \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cors\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-assign\": \"^4\",\n        \"vary\": \"^1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/d3-array\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz\",\n      \"integrity\": \"sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"internmap\": \"1 - 2\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-color\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz\",\n      \"integrity\": \"sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-ease\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz\",\n      \"integrity\": \"sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-format\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz\",\n      \"integrity\": \"sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-interpolate\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz\",\n      \"integrity\": \"sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-color\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-path\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz\",\n      \"integrity\": \"sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-scale\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz\",\n      \"integrity\": \"sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2.10.0 - 3\",\n        \"d3-format\": \"1 - 3\",\n        \"d3-interpolate\": \"1.2.0 - 3\",\n        \"d3-time\": \"2.1.1 - 3\",\n        \"d3-time-format\": \"2 - 4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-shape\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz\",\n      \"integrity\": \"sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-path\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz\",\n      \"integrity\": \"sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time-format\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz\",\n      \"integrity\": \"sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-time\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-timer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz\",\n      \"integrity\": \"sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decimal.js-light\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz\",\n      \"integrity\": \"sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/dom-helpers\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz\",\n      \"integrity\": \"sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.7\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz\",\n      \"integrity\": \"sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://dotenvx.com\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ecdsa-sig-formatter\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\n      \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/eventemitter3\": {\n      \"version\": \"4.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz\",\n      \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.3\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.7.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.3.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.3\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.12\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.13.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.19.0\",\n        \"serve-static\": \"1.16.2\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/express\"\n      }\n    },\n    \"node_modules/express/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/express/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-equals\": {\n      \"version\": \"5.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz\",\n      \"integrity\": \"sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ignore-by-default\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/internmap\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz\",\n      \"integrity\": \"sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonwebtoken\": {\n      \"version\": \"9.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\n      \"integrity\": \"sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jws\": \"^3.2.2\",\n        \"lodash.includes\": \"^4.3.0\",\n        \"lodash.isboolean\": \"^3.0.3\",\n        \"lodash.isinteger\": \"^4.0.4\",\n        \"lodash.isnumber\": \"^3.0.3\",\n        \"lodash.isplainobject\": \"^4.0.6\",\n        \"lodash.isstring\": \"^4.0.1\",\n        \"lodash.once\": \"^4.0.0\",\n        \"ms\": \"^2.1.1\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\",\n        \"npm\": \">=6\"\n      }\n    },\n    \"node_modules/jwa\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz\",\n      \"integrity\": \"sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-equal-constant-time\": \"^1.0.1\",\n        \"ecdsa-sig-formatter\": \"1.0.11\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/jws\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\n      \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jwa\": \"^1.4.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/kareem\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n      \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.includes\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz\",\n      \"integrity\": \"sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isboolean\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz\",\n      \"integrity\": \"sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isinteger\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz\",\n      \"integrity\": \"sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isnumber\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz\",\n      \"integrity\": \"sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isplainobject\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz\",\n      \"integrity\": \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isstring\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz\",\n      \"integrity\": \"sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.once\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/memory-pager\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n      \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/mongodb\": {\n      \"version\": \"5.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-5.9.2.tgz\",\n      \"integrity\": \"sha512-H60HecKO4Bc+7dhOv4sJlgvenK4fQNqqUIlXxZYQNbfEWSALGAwGoyJd/0Qwk4TttFXUOHJ2ZJQe/52ScaUwtQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"mongodb-connection-string-url\": \"^2.6.0\",\n        \"socks\": \"^2.7.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"optionalDependencies\": {\n        \"@mongodb-js/saslprep\": \"^1.1.0\"\n      },\n      \"peerDependencies\": {\n        \"@aws-sdk/credential-providers\": \"^3.188.0\",\n        \"@mongodb-js/zstd\": \"^1.0.0\",\n        \"kerberos\": \"^1.0.0 || ^2.0.0\",\n        \"mongodb-client-encryption\": \">=2.3.0 <3\",\n        \"snappy\": \"^7.2.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@aws-sdk/credential-providers\": {\n          \"optional\": true\n        },\n        \"@mongodb-js/zstd\": {\n          \"optional\": true\n        },\n        \"kerberos\": {\n          \"optional\": true\n        },\n        \"mongodb-client-encryption\": {\n          \"optional\": true\n        },\n        \"snappy\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/mongodb-connection-string-url\": {\n      \"version\": \"2.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz\",\n      \"integrity\": \"sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@types/whatwg-url\": \"^8.2.1\",\n        \"whatwg-url\": \"^11.0.0\"\n      }\n    },\n    \"node_modules/mongoose\": {\n      \"version\": \"7.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-7.8.7.tgz\",\n      \"integrity\": \"sha512-5Bo4CrUxrPITrhMKsqUTOkXXo2CoRC5tXxVQhnddCzqDMwRXfyStrxj1oY865g8gaekSBhxAeNkYyUSJvGm9Hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"kareem\": \"2.5.1\",\n        \"mongodb\": \"5.9.2\",\n        \"mpath\": \"0.9.0\",\n        \"mquery\": \"5.0.0\",\n        \"ms\": \"2.1.3\",\n        \"sift\": \"16.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/mongoose\"\n      }\n    },\n    \"node_modules/mpath\": {\n      \"version\": \"0.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n      \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/mquery\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n      \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"4.x\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/next-themes\": {\n      \"version\": \"0.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz\",\n      \"integrity\": \"sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"react\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\"\n      }\n    },\n    \"node_modules/node-cron\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-cron/-/node-cron-4.1.0.tgz\",\n      \"integrity\": \"sha512-OS+3ORu+h03/haS6Di8Qr7CrVs4YaKZZOynZwQpyPZDnR3tqRbwJmuP2gVR16JfhLgyNlloAV1VTrrWlRogCFA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/nodemon\": {\n      \"version\": \"2.0.22\",\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-2.0.22.tgz\",\n      \"integrity\": \"sha512-B8YqaKMmyuCO7BowF1Z1/mkPqLk6cs/l63Ojtd6otKjMx47Dq1utxfRxcavH1I7VSaL8n5BUaoutadnsX3AAVQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chokidar\": \"^3.5.2\",\n        \"debug\": \"^3.2.7\",\n        \"ignore-by-default\": \"^1.0.1\",\n        \"minimatch\": \"^3.1.2\",\n        \"pstree.remy\": \"^1.1.8\",\n        \"semver\": \"^5.7.1\",\n        \"simple-update-notifier\": \"^1.0.7\",\n        \"supports-color\": \"^5.5.0\",\n        \"touch\": \"^3.1.0\",\n        \"undefsafe\": \"^2.0.5\"\n      },\n      \"bin\": {\n        \"nodemon\": \"bin/nodemon.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/nodemon\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/pstree.remy\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/react\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-19.1.0.tgz\",\n      \"integrity\": \"sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz\",\n      \"integrity\": \"sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"scheduler\": \"^0.26.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^19.1.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/react-smooth\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz\",\n      \"integrity\": \"sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-equals\": \"^5.0.1\",\n        \"prop-types\": \"^15.8.1\",\n        \"react-transition-group\": \"^4.4.5\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/react-transition-group\": {\n      \"version\": \"4.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz\",\n      \"integrity\": \"sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.5.5\",\n        \"dom-helpers\": \"^5.0.1\",\n        \"loose-envify\": \"^1.4.0\",\n        \"prop-types\": \"^15.6.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.6.0\",\n        \"react-dom\": \">=16.6.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/recharts\": {\n      \"version\": \"2.15.3\",\n      \"resolved\": \"https://registry.npmjs.org/recharts/-/recharts-2.15.3.tgz\",\n      \"integrity\": \"sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clsx\": \"^2.0.0\",\n        \"eventemitter3\": \"^4.0.1\",\n        \"lodash\": \"^4.17.21\",\n        \"react-is\": \"^18.3.1\",\n        \"react-smooth\": \"^4.0.4\",\n        \"recharts-scale\": \"^0.4.4\",\n        \"tiny-invariant\": \"^1.3.1\",\n        \"victory-vendor\": \"^36.6.8\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/recharts-scale\": {\n      \"version\": \"0.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz\",\n      \"integrity\": \"sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decimal.js-light\": \"^2.4.1\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.26.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz\",\n      \"integrity\": \"sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/send/node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sift\": {\n      \"version\": \"16.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n      \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/simple-update-notifier\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz\",\n      \"integrity\": \"sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"semver\": \"~7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/simple-update-notifier/node_modules/semver\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.0.0.tgz\",\n      \"integrity\": \"sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.5.tgz\",\n      \"integrity\": \"sha512-iF+tNDQla22geJdTyJB1wM/qrX9DMRwWrciEPwWLPRWAUEM8sQiyxgckLxWT1f7+9VabJS0jTGGr4QgBuvi6Ww==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/sparse-bitfield\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n      \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"memory-pager\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tiny-invariant\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz\",\n      \"integrity\": \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/touch\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.1.tgz\",\n      \"integrity\": \"sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"nodetouch\": \"bin/nodetouch.js\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz\",\n      \"integrity\": \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/undefsafe\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"7.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\",\n      \"integrity\": \"sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/validator\": {\n      \"version\": \"13.15.15\",\n      \"resolved\": \"https://registry.npmjs.org/validator/-/validator-13.15.15.tgz\",\n      \"integrity\": \"sha512-BgWVbCI72aIQy937xbawcs+hrVaN/CZ2UwutgaJ36hGqRrLNM+f5LUT/YPRbo8IV/ASeFzXszezV+y2+rq3l8A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/victory-vendor\": {\n      \"version\": \"36.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz\",\n      \"integrity\": \"sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==\",\n      \"license\": \"MIT AND ISC\",\n      \"dependencies\": {\n        \"@types/d3-array\": \"^3.0.3\",\n        \"@types/d3-ease\": \"^3.0.0\",\n        \"@types/d3-interpolate\": \"^3.0.1\",\n        \"@types/d3-scale\": \"^4.0.2\",\n        \"@types/d3-shape\": \"^3.1.0\",\n        \"@types/d3-time\": \"^3.0.0\",\n        \"@types/d3-timer\": \"^3.0.0\",\n        \"d3-array\": \"^3.1.6\",\n        \"d3-ease\": \"^3.0.1\",\n        \"d3-interpolate\": \"^3.0.1\",\n        \"d3-scale\": \"^4.0.2\",\n        \"d3-shape\": \"^3.1.0\",\n        \"d3-time\": \"^3.0.0\",\n        \"d3-timer\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"11.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz\",\n      \"integrity\": \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tr46\": \"^3.0.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    }\n  }\n}\n",
          "size": 78564,
          "lines": 2137,
          "type": "json"
        },
        "index.js": {
          "content": "const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst connectDB = require('./config/db');\nconst errorHandler = require('./middleware/error');\nconst authRoutes = require('./routes/auth');\nconst transactionRoutes = require('./routes/transactions');\nconst budgetRoutes = require('./routes/budget');\nconst categoryRoutes = require('./routes/categories');\nconst walletRoutes = require('./routes/wallets');\nconst scheduledTransactionRoutes = require('./routes/scheduledTransactions');\n\n// Load env vars\ndotenv.config();\n\n// Connect to database\nconnectDB();\n\nconst app = express();\n\n// CORS configuration\napp.use(cors({\n    origin: '*', // Allow all origins\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],\n    credentials: true,\n    maxAge: 86400 // 24 hours\n}));\n\n// Body parser\napp.use(express.json());\n\n// Mount routers\napp.use('/api/auth', authRoutes);\napp.use('/api/transactions', transactionRoutes);\napp.use('/api/budget', budgetRoutes);\napp.use('/api/categories', categoryRoutes);\napp.use('/api/wallets', walletRoutes);\napp.use('/api/scheduled-transactions', scheduledTransactionRoutes);\n\n// Error handler (should be last piece of middleware)\napp.use((err, req, res, next) => {\n    console.error(err);\n\n    // Handle custom errors\n    if (err.statusCode) {\n        return res.status(err.statusCode).json({\n            success: false,\n            error: err.message\n        });\n    }\n\n    // Handle mongoose validation errors\n    if (err.name === 'ValidationError') {\n        const messages = Object.values(err.errors).map(val => val.message);\n        return res.status(400).json({\n            success: false,\n            error: messages\n        });\n    }\n\n    // Handle mongoose duplicate key errors\n    if (err.code === 11000) {\n        return res.status(400).json({\n            success: false,\n            error: 'Duplicate field value entered'\n        });\n    }\n\n    // Handle mongoose cast errors\n    if (err.name === 'CastError') {\n        return res.status(400).json({\n            success: false,\n            error: 'Invalid ID format'\n        });\n    }\n\n    // Default error\n    res.status(500).json({\n        success: false,\n        error: 'Server Error'\n    });\n});\n\nconst PORT = process.env.PORT || 5000;\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (err, promise) => {\n  console.log(`Error: ${err.message}`);\n  // Close server & exit process\n  process.exit(1);\n});\n",
          "size": 2680,
          "lines": 96,
          "type": "js"
        },
        "server.js": {
          "content": "const scheduledTransactionsRouter = require('./routes/scheduledTransactions');\nconst { scheduleDailyCheck } = require('./utils/scheduler');\n\n// Routes\napp.use('/api/auth', authRouter);\napp.use('/api/transactions', transactionsRouter);\napp.use('/api/budgets', budgetsRouter);\napp.use('/api/categories', categoriesRouter);\napp.use('/api/wallets', walletsRouter);\napp.use('/api/scheduled-transactions', scheduledTransactionsRouter);\n\n// Start the scheduler\nscheduleDailyCheck(); ",
          "size": 476,
          "lines": 13,
          "type": "js"
        },
        "config/db.js": {
          "content": "const mongoose = require('mongoose');\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    console.log(`MongoDB Connected: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB; ",
          "size": 402,
          "lines": 17,
          "type": "js"
        },
        "controllers/authController.js": {
          "content": "const User = require('../models/User');\nconst Category = require('../models/Category');\nconst jwt = require('jsonwebtoken');\nconst ErrorResponse = require('../utils/errorResponse');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, UnauthorizedError, NotFoundError } = require('../errors');\n\n// Default categories to create for new users\nconst defaultCategories = [\n  // Income categories\n  { name: 'salary', type: 'income', icon: 'money-bill', color: '#4CAF50', isDefault: true },\n  { name: 'freelance', type: 'income', icon: 'laptop', color: '#2196F3', isDefault: true },\n  { name: 'investments', type: 'income', icon: 'chart-line', color: '#9C27B0', isDefault: true },\n  \n  // Expense categories\n  { name: 'food', type: 'expense', icon: 'utensils', color: '#FF9800', isDefault: true },\n  { name: 'transport', type: 'expense', icon: 'car', color: '#607D8B', isDefault: true },\n  { name: 'utilities', type: 'expense', icon: 'bolt', color: '#FFC107', isDefault: true },\n  { name: 'rent', type: 'expense', icon: 'home', color: '#E91E63', isDefault: true },\n  { name: 'entertainment', type: 'expense', icon: 'film', color: '#795548', isDefault: true },\n  { name: 'shopping', type: 'expense', icon: 'shopping-cart', color: '#009688', isDefault: true },\n  { name: 'health', type: 'expense', icon: 'heartbeat', color: '#F44336', isDefault: true }\n];\n\n// Register User\nconst register = async (req, res) => {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const userExists = await User.findOne({ email });\n    if (userExists) {\n      throw new BadRequestError('User already exists');\n    }\n\n    // Create user\n    const user = await User.create({\n      name,\n      email,\n      password\n    });\n\n    // Create default wallet\n    await Wallet.create({\n      userId: user._id,\n      name: 'Main Wallet',\n      currency: 'USD',\n      balance: 0,\n      isDefault: true\n    });\n\n    // Create default categories for the new user\n    const categories = defaultCategories.map(category => ({\n      ...category,\n      userId: user.id\n    }));\n    await Category.insertMany(categories);\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(201).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Login User\nconst login = async (req, res) => {\n  try {\n    const { email, password } = req.body;\n\n    // Check if user exists\n    const user = await User.findOne({ email }).select('+password');\n    if (!user) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Check if password matches\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(200).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Get current user\nconst getCurrentUser = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: user\n    });\n  } catch (error) {\n    console.error('Get current user error:', error);\n    throw error;\n  }\n};\n\n// Verify token and get current user\nconst verifyToken = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Token verification error:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  register,\n  login,\n  getCurrentUser,\n  verifyToken\n};",
          "size": 4364,
          "lines": 165,
          "type": "js"
        },
        "controllers/budgetController.js": {
          "content": "const Budget = require('../models/Budget');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all budgets for a user\nexports.getBudgets = async (req, res, next) => {\n  try {\n    const { month, year } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.id };\n    \n    // Add month and year to query if provided\n    if (month && year) {\n      query.month = parseInt(month);\n      query.year = parseInt(year);\n    }\n\n    const budgets = await Budget.find(query).sort({ category: 1 });\n\n    // Calculate total budget\n    const totalBudget = budgets.reduce((sum, budget) => sum + budget.limit, 0);\n\n    res.json({\n      success: true,\n      count: budgets.length,\n      totalBudget,\n      data: budgets\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single budget\nexports.getBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Add or Update budget\nexports.addOrUpdateBudget = async (req, res, next) => {\n  try {\n    const { category, limit, month, year } = req.body;\n\n    // Validate required fields\n    if (!category || !limit || !month || !year) {\n      return next(new ErrorResponse('Please provide category, limit, month and year', 400));\n    }\n\n    // Validate month\n    if (month < 1 || month > 12) {\n      return next(new ErrorResponse('Month must be between 1 and 12', 400));\n    }\n\n    // Validate limit\n    if (limit <= 0) {\n      return next(new ErrorResponse('Limit must be greater than 0', 400));\n    }\n\n    // Check if budget exists\n    let budget = await Budget.findOne({ \n      userId: req.user.id, \n      category, \n      month, \n      year \n    });\n\n    if (budget) {\n      // Update existing budget\n      budget.limit = limit;\n      await budget.save();\n      \n      return res.json({\n        success: true,\n        data: budget\n      });\n    }\n\n    // Create new budget\n    budget = new Budget({\n      userId: req.user.id,\n      category,\n      limit,\n      month,\n      year\n    });\n\n    await budget.save();\n\n    res.status(201).json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete budget\nexports.deleteBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    await budget.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n",
          "size": 2778,
          "lines": 136,
          "type": "js"
        },
        "controllers/categoryController.js": {
          "content": "const Category = require('../models/Category');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all categories for a user\nexports.getCategories = async (req, res, next) => {\n  try {\n    const { type } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.userId };\n    \n    // Add type filter if provided\n    if (type) {\n      query.type = type;\n    }\n\n    const categories = await Category.find(query).sort({ name: 1 });\n\n    res.json({\n      success: true,\n      count: categories.length,\n      data: categories\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single category\nexports.getCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Create new category\nexports.createCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Validate required fields\n    if (!name || !type) {\n      return next(new ErrorResponse('Please provide name and type', 400));\n    }\n\n    // Validate type\n    if (!['income', 'expense'].includes(type)) {\n      return next(new ErrorResponse('Type must be either income or expense', 400));\n    }\n\n    // Check if category already exists for this user\n    const existingCategory = await Category.findOne({\n      userId: req.user.userId,\n      name: name.toLowerCase()\n    });\n\n    if (existingCategory) {\n      return next(new ErrorResponse('Category already exists', 400));\n    }\n\n    const category = await Category.create({\n      userId: req.user.userId,\n      name: name.toLowerCase(),\n      type,\n      icon: icon || 'default',\n      color: color || '#000000'\n    });\n\n    res.status(201).json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Update category\nexports.updateCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Find category\n    let category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow updating default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot update default category', 400));\n    }\n\n    // Check if new name already exists\n    if (name && name !== category.name) {\n      const existingCategory = await Category.findOne({\n        userId: req.user.userId,\n        name: name.toLowerCase()\n      });\n\n      if (existingCategory) {\n        return next(new ErrorResponse('Category name already exists', 400));\n      }\n    }\n\n    // Update fields\n    if (name) category.name = name.toLowerCase();\n    if (type) category.type = type;\n    if (icon) category.icon = icon;\n    if (color) category.color = color;\n\n    await category.save();\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete category\nexports.deleteCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow deleting default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot delete default category', 400));\n    }\n\n    await category.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n}; ",
          "size": 3767,
          "lines": 167,
          "type": "js"
        },
        "controllers/scheduledTransactionController.js": {
          "content": "const ScheduledTransaction = require('../models/ScheduledTransaction');\nconst Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all scheduled transactions for a user\nconst getScheduledTransactions = async (req, res) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            userId: req.user.userId\n        }).sort({ dayOfMonth: 1 });\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransactions\n        });\n    } catch (error) {\n        console.error('Error in getScheduledTransactions:', error);\n        throw error;\n    }\n};\n\n// Create a new scheduled transaction\nconst createScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category || !dayOfMonth || !walletId) {\n            throw new BadRequestError('Please provide type, amount, category, dayOfMonth and walletId');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Validate day of month\n        if (dayOfMonth < 1 || dayOfMonth > 31) {\n            throw new BadRequestError('Day of month must be between 1 and 31');\n        }\n\n        // Find wallet\n        const wallet = await Wallet.findOne({\n            _id: walletId,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Create scheduled transaction\n        const scheduledTransaction = await ScheduledTransaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '',\n            dayOfMonth,\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        res.status(201).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in createScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Update a scheduled transaction\nconst updateScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, isActive, affectBalance } = req.body;\n\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        // Update fields if provided\n        if (type) scheduledTransaction.type = type;\n        if (amount) scheduledTransaction.amount = amount;\n        if (category) scheduledTransaction.category = category;\n        if (description !== undefined) scheduledTransaction.description = description;\n        if (dayOfMonth) scheduledTransaction.dayOfMonth = dayOfMonth;\n        if (isActive !== undefined) scheduledTransaction.isActive = isActive;\n        if (affectBalance !== undefined) scheduledTransaction.affectBalance = affectBalance;\n        if (walletId) {\n            const wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n            if (!wallet) {\n                throw new NotFoundError('Wallet not found');\n            }\n            scheduledTransaction.walletId = wallet._id;\n        }\n\n        await scheduledTransaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in updateScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete a scheduled transaction\nconst deleteScheduledTransaction = async (req, res) => {\n    try {\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        await scheduledTransaction.deleteOne();\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Execute scheduled transactions for a given day\nconst executeScheduledTransactions = async (dayOfMonth) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            dayOfMonth,\n            isActive: true\n        });\n\n        for (const scheduled of scheduledTransactions) {\n            // Check if already executed this month\n            const now = new Date();\n            const lastExecuted = scheduled.lastExecuted;\n            if (lastExecuted && \n                lastExecuted.getMonth() === now.getMonth() && \n                lastExecuted.getFullYear() === now.getFullYear()) {\n                continue;\n            }\n\n            // Create the actual transaction\n            const transaction = await Transaction.create({\n                userId: scheduled.userId,\n                walletId: scheduled.walletId,\n                type: scheduled.type,\n                amount: scheduled.amount,\n                category: scheduled.category,\n                description: scheduled.description,\n                date: new Date(),\n                affectBalance: scheduled.affectBalance\n            });\n\n            // Update wallet balance if needed\n            if (scheduled.affectBalance) {\n                const wallet = await Wallet.findById(scheduled.walletId);\n                if (wallet) {\n                    if (scheduled.type === 'income') {\n                        wallet.balance += scheduled.amount;\n                    } else {\n                        if (wallet.balance < scheduled.amount) {\n                            console.error(`Insufficient balance for scheduled transaction ${scheduled._id}`);\n                            continue;\n                        }\n                        wallet.balance -= scheduled.amount;\n                    }\n                    wallet.lastUpdated = new Date();\n                    await wallet.save();\n                }\n            }\n\n            // Update last executed date\n            scheduled.lastExecuted = new Date();\n            await scheduled.save();\n        }\n    } catch (error) {\n        console.error('Error executing scheduled transactions:', error);\n    }\n};\n\nmodule.exports = {\n    getScheduledTransactions,\n    createScheduledTransaction,\n    updateScheduledTransaction,\n    deleteScheduledTransaction,\n    executeScheduledTransactions\n}; ",
          "size": 7128,
          "lines": 212,
          "type": "js"
        },
        "controllers/transactionController.js": {
          "content": "const Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all transactions\nconst getTransactions = async (req, res) => {\n    try {\n        const { month, year, type, category, walletId } = req.query;\n        const query = { userId: req.user.userId };\n\n        // Add filters if provided\n        if (month && year) {\n            const startDate = new Date(year, month - 1, 1);\n            const endDate = new Date(year, month, 0);\n            query.date = { $gte: startDate, $lte: endDate };\n        }\n        if (type) query.type = type;\n        if (category) query.category = category;\n        if (walletId) query.walletId = walletId;\n\n        const transactions = await Transaction.find(query).sort({ date: -1 });\n\n        // Calculate totals\n        const totals = transactions.reduce((acc, transaction) => {\n            if (transaction.type === 'income') {\n                acc.income += transaction.amount;\n            } else {\n                acc.expense += transaction.amount;\n            }\n            return acc;\n        }, { income: 0, expense: 0 });\n\n        res.status(200).json({\n            success: true,\n            count: transactions.length,\n            totals,\n            data: transactions\n        });\n    } catch (error) {\n        console.error('Error in getTransactions:', error);\n        throw error;\n    }\n};\n\n// Get single transaction\nconst getTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in getTransaction:', error);\n        throw error;\n    }\n};\n\n// Add transaction\nconst addTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category) {\n            throw new BadRequestError('Please provide type, amount and category');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Find wallet - use provided walletId or default wallet\n        let wallet;\n        if (walletId) {\n            wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n        } else {\n            // Find default wallet\n            wallet = await Wallet.findOne({\n                userId: req.user.userId,\n                isDefault: true\n            });\n        }\n\n        if (!wallet) {\n            throw new NotFoundError('No wallet found. Please create a wallet first.');\n        }\n\n        // Create transaction\n        const transaction = await Transaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '', // Make description optional\n            date: date || Date.now(),\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        // Update wallet balance only if affectBalance is true\n        if (affectBalance !== false) {\n            if (type === 'income') {\n                wallet.balance += amount;\n            } else {\n                if (wallet.balance < amount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                wallet.balance -= amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(201).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in addTransaction:', error);\n        throw error;\n    }\n};\n\n// Update transaction\nconst updateTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n        \n        console.log('Debug - Update Transaction Request:');\n        console.log('Transaction ID from params:', req.params.id);\n        console.log('User ID from request:', req.user.userId);\n        console.log('Request body:', req.body);\n\n        // Validate transaction ID\n        if (!req.params.id) {\n            throw new BadRequestError('Transaction ID is required');\n        }\n\n        // Find the transaction and log the query\n        const transactionQuery = {\n            _id: req.params.id,\n            userId: req.user.userId\n        };\n        console.log('Finding transaction with query:', transactionQuery);\n\n        const transaction = await Transaction.findOne(transactionQuery);\n        console.log('Found transaction:', transaction ? {\n            id: transaction._id,\n            type: transaction.type,\n            amount: transaction.amount,\n            walletId: transaction.walletId,\n            userId: transaction.userId\n        } : 'No transaction found');\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Find the current wallet\n        const oldWallet = await Wallet.findOne({\n            _id: transaction.walletId,\n            userId: req.user.userId\n        });\n\n        if (!oldWallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Find the new wallet if walletId is provided\n        let newWallet = oldWallet;\n        if (walletId) {\n            // Safely compare wallet IDs\n            const currentWalletId = transaction.walletId.toString();\n            const newWalletId = walletId.toString();\n            \n            console.log('Wallet ID comparison:', {\n                currentWalletId,\n                newWalletId,\n                isDifferent: newWalletId !== currentWalletId\n            });\n            \n            if (newWalletId !== currentWalletId) {\n                newWallet = await Wallet.findOne({\n                    _id: walletId,\n                    userId: req.user.userId\n                });\n                console.log('Found new wallet:', newWallet ? {\n                    id: newWallet._id,\n                    name: newWallet.name,\n                    balance: newWallet.balance\n                } : 'No new wallet found');\n                \n                if (!newWallet) {\n                    throw new NotFoundError('New wallet not found');\n                }\n            }\n        }\n\n        // Calculate balance changes\n        const oldAmount = transaction.amount;\n        const newAmount = amount || oldAmount;\n        const oldType = transaction.type;\n        const newType = type || oldType;\n        const oldAffectBalance = transaction.affectBalance;\n        const newAffectBalance = affectBalance !== undefined ? affectBalance : oldAffectBalance;\n\n        // Update old wallet balance if the old transaction affected balance\n        if (oldAffectBalance) {\n            if (oldType === 'income') {\n                oldWallet.balance -= oldAmount;\n            } else {\n                oldWallet.balance += oldAmount;\n            }\n            oldWallet.lastUpdated = Date.now();\n            await oldWallet.save();\n        }\n\n        // Update new wallet balance if the new transaction should affect balance\n        if (newAffectBalance) {\n            if (newType === 'income') {\n                newWallet.balance += newAmount;\n            } else {\n                if (newWallet.balance < newAmount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                newWallet.balance -= newAmount;\n            }\n            newWallet.lastUpdated = Date.now();\n            await newWallet.save();\n        }\n\n        // Update transaction\n        if (type) transaction.type = type;\n        if (amount) transaction.amount = amount;\n        if (category) transaction.category = category;\n        if (description !== undefined) transaction.description = description;\n        if (date) transaction.date = date;\n        if (walletId) transaction.walletId = walletId;\n        if (affectBalance !== undefined) transaction.affectBalance = affectBalance;\n\n        await transaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in updateTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete transaction\nconst deleteTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Update wallet balance only if the transaction affected balance\n        if (transaction.affectBalance) {\n            const wallet = await Wallet.findOne({\n                _id: transaction.walletId,\n                userId: req.user.userId\n            });\n\n            if (transaction.type === 'income') {\n                wallet.balance -= transaction.amount;\n            } else {\n                wallet.balance += transaction.amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        // Use deleteOne instead of remove\n        await Transaction.deleteOne({ _id: transaction._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteTransaction:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getTransactions,\n    getTransaction,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction\n};\n",
          "size": 10207,
          "lines": 319,
          "type": "js"
        },
        "controllers/walletController.js": {
          "content": "const Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all wallets for a user\nconst getWallets = async (req, res) => {\n    try {\n        const wallets = await Wallet.find({ userId: req.user.userId });\n        res.status(200).json({\n            success: true,\n            count: wallets.length,\n            data: wallets\n        });\n    } catch (error) {\n        console.error('Error in getWallets:', error);\n        throw error;\n    }\n};\n\n// Get single wallet\nconst getWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in getWallet:', error);\n        throw error;\n    }\n};\n\n// Create new wallet\nconst createWallet = async (req, res) => {\n    try {\n        const { name, currency, balance, isDefault } = req.body;\n\n        // Validate required fields\n        if (!name || !currency) {\n            throw new BadRequestError('Please provide name and currency');\n        }\n\n        // Validate balance if provided\n        if (balance !== undefined && balance < 0) {\n            throw new BadRequestError('Balance cannot be negative');\n        }\n\n        // If this is set as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        // Create wallet\n        const wallet = await Wallet.create({\n            userId: req.user.userId,\n            name,\n            currency,\n            balance: balance || 0,\n            isDefault: isDefault || false\n        });\n\n        res.status(201).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in createWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Set initial balance\nconst setInitialBalance = async (req, res) => {\n    try {\n        const { balance, currency } = req.body;\n\n        if (!balance || balance < 0) {\n            throw new BadRequestError('Please provide a valid initial balance');\n        }\n\n        // Find or create default wallet\n        let wallet = await Wallet.findOne({\n            userId: req.user.userId,\n            isDefault: true\n        });\n\n        if (!wallet) {\n            wallet = await Wallet.create({\n                userId: req.user.userId,\n                balance,\n                currency: currency || 'USD',\n                isDefault: true,\n                name: 'Main Wallet'\n            });\n        } else {\n            wallet.balance = balance;\n            if (currency) wallet.currency = currency;\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in setInitialBalance:', error);\n        throw error;\n    }\n};\n\n// Update wallet\nconst updateWallet = async (req, res) => {\n    try {\n        const { name, currency, isDefault } = req.body;\n\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // If setting as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        if (name) wallet.name = name;\n        if (currency) wallet.currency = currency;\n        if (typeof isDefault === 'boolean') wallet.isDefault = isDefault;\n        wallet.lastUpdated = Date.now();\n\n        await wallet.save();\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in updateWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Delete wallet\nconst deleteWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        if (wallet.isDefault) {\n            throw new BadRequestError('Cannot delete default wallet');\n        }\n\n        await Wallet.deleteOne({ _id: wallet._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteWallet:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getWallets,\n    getWallet,\n    createWallet,\n    setInitialBalance,\n    updateWallet,\n    deleteWallet\n}; ",
          "size": 5315,
          "lines": 203,
          "type": "js"
        },
        "routes/auth.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst { register, login, verifyToken, getCurrentUser } = require('../controllers/authController');\nconst { authenticateUser } = require('../middleware/authentication');\n\n// Public routes\nrouter.post('/register', register);\nrouter.post('/login', login);\n\n// Protected routes\nrouter.get('/verify', authenticateUser, verifyToken);\nrouter.get('/me', authenticateUser, getCurrentUser);\n\nmodule.exports = router;\n",
          "size": 476,
          "lines": 15,
          "type": "js"
        },
        "routes/budget.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst {\n  getBudgets,\n  getBudget,\n  addOrUpdateBudget,\n  deleteBudget\n} = require('../controllers/budgetController');\nconst { authenticateUser } = require('../middleware/authentication');\n\n// Apply authentication middleware to all routes\nrouter.use(authenticateUser);\n\n// Get all budgets (with optional month/year filter)\nrouter.get('/', getBudgets);\n\n// Get single budget\nrouter.get('/:id', getBudget);\n\n// Add or update budget\nrouter.post('/', addOrUpdateBudget);\n\n// Delete budget\nrouter.delete('/:id', deleteBudget);\n\nmodule.exports = router;\n",
          "size": 617,
          "lines": 27,
          "type": "js"
        },
        "routes/categories.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst {\n  getCategories,\n  getCategory,\n  createCategory,\n  updateCategory,\n  deleteCategory\n} = require('../controllers/categoryController');\nconst { authenticateUser } = require('../middleware/authentication');\n\n// Apply authentication middleware to all routes\nrouter.use(authenticateUser);\n\n// Get all categories (with optional type filter)\nrouter.get('/', getCategories);\n\n// Get single category\nrouter.get('/:id', getCategory);\n\n// Create new category\nrouter.post('/', createCategory);\n\n// Update category\nrouter.put('/:id', updateCategory);\n\n// Delete category\nrouter.delete('/:id', deleteCategory);\n\nmodule.exports = router; ",
          "size": 701,
          "lines": 30,
          "type": "js"
        },
        "routes/scheduledTransactions.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst { authenticateUser } = require('../middleware/authentication');\nconst {\n    getScheduledTransactions,\n    createScheduledTransaction,\n    updateScheduledTransaction,\n    deleteScheduledTransaction,\n    executeScheduledTransactions,\n} = require('../controllers/scheduledTransactionController');\n\n// Protect all routes\nrouter.use(authenticateUser);\n\n// Get all scheduled transactions\nrouter.get('/', getScheduledTransactions);\n\n// Create new scheduled transaction\nrouter.post('/', createScheduledTransaction);\n\n// Update scheduled transaction\nrouter.put('/:id', updateScheduledTransaction);\n\n// Delete scheduled transaction\nrouter.delete('/:id', deleteScheduledTransaction);\n\n// Execute scheduled transactions\nrouter.post('/execute', executeScheduledTransactions);\n\nmodule.exports = router; ",
          "size": 864,
          "lines": 30,
          "type": "js"
        },
        "routes/transactions.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst {\n  getTransactions,\n  getTransaction,\n  addTransaction,\n  updateTransaction,\n  deleteTransaction\n} = require('../controllers/transactionController');\nconst { authenticateUser } = require('../middleware/authentication');\n\n// Apply authentication middleware to all routes\nrouter.use(authenticateUser);\n\n// Get all transactions (with optional filters)\nrouter.get('/', getTransactions);\n\n// Get single transaction\nrouter.get('/:id', getTransaction);\n\n// Add new transaction\nrouter.post('/', addTransaction);\n\n// Update transaction\nrouter.put('/:id', updateTransaction);\n\n// Delete transaction\nrouter.delete('/:id', deleteTransaction);\n\nmodule.exports = router;\n",
          "size": 733,
          "lines": 31,
          "type": "js"
        },
        "routes/wallets.js": {
          "content": "const express = require('express');\nconst router = express.Router();\nconst {\n    getWallets,\n    getWallet,\n    createWallet,\n    setInitialBalance,\n    updateWallet,\n    deleteWallet\n} = require('../controllers/walletController');\nconst { authenticateUser } = require('../middleware/authentication');\n\nrouter.use(authenticateUser);\n\nrouter.route('/')\n    .get(getWallets)\n    .post(createWallet);\n\nrouter.route('/initial-balance')\n    .post(setInitialBalance);\n\nrouter.route('/:id')\n    .get(getWallet)\n    .put(updateWallet)\n    .delete(deleteWallet);\n\nmodule.exports = router; ",
          "size": 580,
          "lines": 27,
          "type": "js"
        },
        "models/Budget.js": {
          "content": "const mongoose = require('mongoose');\n\nconst budgetSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  category: { type: String, required: true },\n  limit: { type: Number, required: true },\n  month: { type: Number, required: true }, // 1–12\n  year: { type: Number, required: true },\n}, { timestamps: true });\n\nmodule.exports = mongoose.model('Budget', budgetSchema);\n",
          "size": 429,
          "lines": 12,
          "type": "js"
        },
        "models/Category.js": {
          "content": "const mongoose = require('mongoose');\n\nconst categorySchema = new mongoose.Schema({\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  name: {\n    type: String,\n    required: [true, 'Please provide a category name'],\n    trim: true\n  },\n  type: {\n    type: String,\n    enum: ['income', 'expense'],\n    required: [true, 'Please specify if this is an income or expense category']\n  },\n  icon: {\n    type: String,\n    default: 'default' // You can use this to store icon names or emojis\n  },\n  color: {\n    type: String,\n    default: '#000000' // Default color in hex\n  },\n  isDefault: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true\n});\n\n// Compound index to ensure unique category names per user\ncategorySchema.index({ userId: 1, name: 1 }, { unique: true });\n\nmodule.exports = mongoose.model('Category', categorySchema); ",
          "size": 887,
          "lines": 38,
          "type": "js"
        },
        "models/ScheduledTransaction.js": {
          "content": "const mongoose = require('mongoose');\n\nconst scheduledTransactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 },\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  dayOfMonth: { type: Number, required: true, min: 1, max: 31 },\n  isActive: { type: Boolean, default: true },\n  lastExecuted: { type: Date },\n  affectBalance: { type: Boolean, default: true },\n}, { timestamps: true });\n\n// Index for efficient querying\nscheduledTransactionSchema.index({ userId: 1, dayOfMonth: 1 });\nscheduledTransactionSchema.index({ isActive: 1 });\n\nconst ScheduledTransaction = mongoose.model('ScheduledTransaction', scheduledTransactionSchema);\n\nmodule.exports = ScheduledTransaction; ",
          "size": 983,
          "lines": 22,
          "type": "js"
        },
        "models/Transaction.js": {
          "content": "const mongoose = require('mongoose');\n\nconst transactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 }, // store as cents if needed\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  date: { type: Date, default: Date.now },\n}, { timestamps: true });\n\n// Index for efficient querying\ntransactionSchema.index({ userId: 1, date: -1 });\ntransactionSchema.index({ userId: 1, walletId: 1, date: -1 });\n\nmodule.exports = mongoose.model('Transaction', transactionSchema);\n",
          "size": 779,
          "lines": 18,
          "type": "js"
        },
        "models/User.js": {
          "content": "const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Please add a name'],\n  },\n  email: {\n    type: String,\n    required: [true, 'Please add an email'],\n    unique: true,\n    match: [\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Please add a valid email',\n    ],\n  },\n  password: {\n    type: String,\n    required: [true, 'Please add a password'],\n    minlength: 6,\n    select: false,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n// Encrypt password using bcrypt\nUserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) {\n    next();\n  }\n\n  const salt = await bcrypt.genSalt(10);\n  this.password = await bcrypt.hash(this.password, salt);\n});\n\n// Match user entered password to hashed password in database\nUserSchema.methods.comparePassword = async function (enteredPassword) {\n  return await bcrypt.compare(enteredPassword, this.password);\n};\n\n// Sign JWT and return\nUserSchema.methods.getSignedJwtToken = function () {\n  return jwt.sign({ id: this._id }, process.env.JWT_SECRET, {\n    expiresIn: process.env.JWT_EXPIRE,\n  });\n};\n\nmodule.exports = mongoose.model('User', UserSchema); ",
          "size": 1300,
          "lines": 53,
          "type": "js"
        },
        "models/Wallet.js": {
          "content": "const mongoose = require('mongoose');\n\nconst walletSchema = new mongoose.Schema({\n    userId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    balance: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    currency: {\n        type: String,\n        required: true,\n        default: 'USD'\n    },\n    name: {\n        type: String,\n        required: true,\n        default: 'Main Wallet'\n    },\n    isDefault: {\n        type: Boolean,\n        default: true\n    },\n    lastUpdated: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n\n// Ensure a user can only have one default wallet\nwalletSchema.index({ userId: 1, isDefault: 1 }, { \n    unique: true,\n    partialFilterExpression: { isDefault: true }\n});\n\nmodule.exports = mongoose.model('Wallet', walletSchema); ",
          "size": 869,
          "lines": 42,
          "type": "js"
        },
        "middleware/authentication.js": {
          "content": "const jwt = require('jsonwebtoken');\nconst { UnauthorizedError } = require('../errors');\n\nconst authenticateUser = async (req, res, next) => {\n    try {\n        // Get token from header\n        const authHeader = req.headers.authorization;\n        console.log('Auth header:', authHeader);\n        \n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.log('Invalid auth header format');\n            throw new UnauthorizedError('Authentication invalid');\n        }\n\n        const token = authHeader.split(' ')[1];\n        console.log('Token:', token);\n\n        try {\n            const payload = jwt.verify(token, process.env.JWT_SECRET);\n            console.log('Token payload:', payload);\n            \n            // Check if payload has the required fields\n            if (!payload.id) {\n                console.log('Missing id in token payload');\n                throw new UnauthorizedError('Invalid token payload');\n            }\n\n            // Attach the user to the request object\n            req.user = {\n                userId: payload.id,\n                name: payload.name\n            };\n            \n            next();\n        } catch (error) {\n            console.error('JWT verification error:', error);\n            throw new UnauthorizedError('Authentication invalid');\n        }\n    } catch (error) {\n        console.error('Authentication error:', error);\n        next(error);\n    }\n};\n\nmodule.exports = {\n    authenticateUser\n}; ",
          "size": 1476,
          "lines": 47,
          "type": "js"
        },
        "middleware/error.js": {
          "content": "const ErrorResponse = require('../utils/errorResponse');\n\nconst errorHandler = (err, req, res, next) => {\n  let error = { ...err };\n  error.message = err.message;\n\n  // Log to console for dev\n  console.error(err);\n\n  // Mongoose bad ObjectId\n  if (err.name === 'CastError') {\n    const message = `Resource not found`;\n    error = new ErrorResponse(message, 404);\n  }\n\n  // Mongoose duplicate key\n  if (err.code === 11000) {\n    const message = 'Duplicate field value entered';\n    error = new ErrorResponse(message, 400);\n  }\n\n  // Mongoose validation error\n  if (err.name === 'ValidationError') {\n    const message = Object.values(err.errors).map(val => val.message);\n    error = new ErrorResponse(message, 400);\n  }\n\n  res.status(error.statusCode || 500).json({\n    success: false,\n    error: error.message || 'Server Error',\n    stack: process.env.NODE_ENV === 'development' ? err.stack : undefined\n  });\n};\n\nmodule.exports = errorHandler; ",
          "size": 943,
          "lines": 35,
          "type": "js"
        },
        "utils/debugTransaction.js": {
          "content": "// Debug utility for transaction updates\nexport const debugTransactionUpdate = async (transactionId, updateData) => {\n    try {\n        console.log('Debug - Transaction Update Request:');\n        console.log('Transaction ID:', transactionId);\n        console.log('Update Data:', updateData);\n        \n        // Log the full request details\n        const requestDetails = {\n            url: `/api/transactions/${transactionId}`,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            data: updateData\n        };\n        \n        console.log('Full Request Details:', requestDetails);\n        \n        // Make the actual request\n        const response = await fetch(requestDetails.url, {\n            method: requestDetails.method,\n            headers: requestDetails.headers,\n            body: JSON.stringify(requestDetails.data)\n        });\n        \n        // Log response details\n        console.log('Response Status:', response.status);\n        const responseData = await response.json();\n        console.log('Response Data:', responseData);\n        \n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        return responseData;\n    } catch (error) {\n        console.error('Debug - Transaction Update Error:', error);\n        throw error;\n    }\n}; ",
          "size": 1468,
          "lines": 42,
          "type": "js"
        },
        "utils/errorResponse.js": {
          "content": "class ErrorResponse extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\nmodule.exports = ErrorResponse; ",
          "size": 166,
          "lines": 8,
          "type": "js"
        },
        "utils/scheduler.js": {
          "content": "const cron = require('node-cron');\nconst { executeScheduledTransactions } = require('../controllers/scheduledTransactionController');\n\n// Run every day at midnight\nconst scheduleDailyCheck = () => {\n    cron.schedule('0 0 * * *', async () => {\n        const today = new Date();\n        const dayOfMonth = today.getDate();\n        \n        console.log(`Executing scheduled transactions for day ${dayOfMonth}`);\n        await executeScheduledTransactions(dayOfMonth);\n    });\n};\n\nmodule.exports = {\n    scheduleDailyCheck\n}; ",
          "size": 523,
          "lines": 17,
          "type": "js"
        }
      },
      "summary": {
        "totalFiles": 28,
        "totalLines": 3988,
        "fileTypes": {
          "json": 2,
          "js": 26
        },
        "structure": {}
      }
    },
    "intelligentAnalysis": {
      "projectPurpose": {
        "domain": "Web Application",
        "type": "Express.js Backend",
        "complexity": "moderate",
        "target": "General Users",
        "confidence": 1,
        "description": "A budget tracking application",
        "features": [
          "MongoDB Database",
          "User Authentication",
          "User Management",
          "Budget Tracking",
          "Transaction Management",
          "Scheduled Tasks",
          "Transaction Processing",
          "API Endpoints",
          "Database Configuration"
        ],
        "technologies": [
          "Express.js",
          "Node.js",
          "MongoDB"
        ],
        "keyFiles": [
          "config/db.js",
          "package.json",
          "index.js",
          "server.js"
        ],
        "conclusion": "This is a web application that provides MongoDB Database, User Authentication, User Management. Built with Express.js, Node.js, MongoDB. The project has moderate complexity."
      },
      "architecture": {
        "pattern": "MVC (Model-View-Controller)",
        "layers": [
          "Data Access",
          "Utilities",
          "Configuration",
          "Middleware"
        ],
        "patterns": [
          "Singleton (Configuration)",
          "Middleware",
          "MVC"
        ],
        "quality": 9,
        "strengths": [
          "Good separation of concerns",
          "Good use of design patterns"
        ],
        "weaknesses": [
          "Basic directory organization",
          "Limited configuration management",
          "Missing documentation",
          "No testing structure found"
        ],
        "structure": {
          "rootFiles": [
            ".gitignore",
            "errors.js",
            "index.js",
            "package-lock.json",
            "package.json",
            "server.js"
          ],
          "srcStructure": {},
          "configFiles": [
            "config/db.js"
          ],
          "documentation": [],
          "testing": [],
          "deployment": []
        }
      },
      "coherence": {
        "consistency": 9.666666666666666,
        "naming": 10,
        "structure": 9,
        "patterns": 10
      },
      "quality": {
        "overall": 7,
        "maintainability": 7,
        "readability": 8,
        "performance": 5,
        "security": 10,
        "testability": 5
      },
      "insights": [
        {
          "type": "purpose",
          "title": "Project Purpose Identified",
          "message": "This is a web application that provides MongoDB Database, User Authentication, User Management. Built with Express.js, Node.js, MongoDB. The project has moderate complexity.",
          "confidence": 1,
          "category": "understanding"
        },
        {
          "type": "technology",
          "title": "Technology Stack Identified",
          "message": "Uses: Express.js, Node.js, MongoDB",
          "confidence": 0.9,
          "category": "information"
        },
        {
          "type": "features",
          "title": "Main Features Identified",
          "message": "Provides: MongoDB Database, User Authentication, User Management, Budget Tracking, Transaction Management and more...",
          "confidence": 0.8,
          "category": "information"
        },
        {
          "type": "architecture",
          "title": "Strong Architecture",
          "message": "The project uses MVC (Model-View-Controller) with good separation of concerns and design patterns.",
          "confidence": 0.9,
          "category": "strength"
        },
        {
          "type": "coherence",
          "title": "Consistent Codebase",
          "message": "The codebase shows good consistency in naming, structure, and patterns.",
          "confidence": 0.9666666666666666,
          "category": "strength"
        },
        {
          "type": "quality",
          "title": "High Code Quality",
          "message": "The codebase demonstrates good quality across maintainability, readability, and other dimensions.",
          "confidence": 0.7,
          "category": "strength"
        },
        {
          "type": "structure",
          "title": "Complex Project Structure",
          "message": "The project contains 24 files across 5 directories, indicating a substantial codebase.",
          "confidence": 0.8,
          "category": "information"
        },
        {
          "type": "structure",
          "title": "Key Files Identified",
          "message": "Main files: config/db.js, package.json, index.js...",
          "confidence": 0.8,
          "category": "information"
        },
        {
          "type": "quality",
          "title": "Add Testing",
          "message": "Implement unit tests and integration tests for better code reliability",
          "priority": "medium",
          "category": "testing"
        },
        {
          "type": "structure",
          "title": "Add Documentation",
          "message": "Create README.md with project description, setup instructions, and API documentation",
          "priority": "high",
          "category": "documentation"
        },
        {
          "type": "structure",
          "title": "Add Test Files",
          "message": "Create test files and testing infrastructure",
          "priority": "medium",
          "category": "testing"
        },
        {
          "type": "structure",
          "title": "Improve Configuration",
          "message": "Add proper configuration files and environment management",
          "priority": "medium",
          "category": "configuration"
        },
        {
          "type": "technology",
          "title": "Add Security Middleware",
          "message": "Consider adding helmet.js for enhanced security headers",
          "priority": "medium",
          "category": "security"
        },
        {
          "type": "technology",
          "title": "Add Rate Limiting",
          "message": "Consider adding express-rate-limit for API protection",
          "priority": "low",
          "category": "security"
        },
        {
          "type": "technology",
          "title": "Add Testing Framework",
          "message": "Consider adding Jest or Mocha for unit testing",
          "priority": "medium",
          "category": "testing"
        }
      ],
      "structure": {
        "files": {
          ".gitignore": "# Dependencies\nnode_modules/\nnpm-debug.log\nyarn-debug.log\nyarn-error.log\npersonal-finance-app\n\n# Environment variables\n.env\n.env.local\n.env.*.local\n\n# IDE\n.idea/\n.vscode/\n*.swp\n*.swo\n\n# OS\n.DS_Store\nThumbs.db\n\n# Logs\nlogs\n*.log\n\n# Build output\ndist/\nbuild/\ncoverage/\n\n# Temporary files\n*.tmp\n*.temp\n.cache/ ",
          "config/db.js": "const mongoose = require('mongoose');\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    console.log(`MongoDB Connected: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB; ",
          "controllers/authController.js": "const User = require('../models/User');\nconst Category = require('../models/Category');\nconst jwt = require('jsonwebtoken');\nconst ErrorResponse = require('../utils/errorResponse');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, UnauthorizedError, NotFoundError } = require('../errors');\n\n// Default categories to create for new users\nconst defaultCategories = [\n  // Income categories\n  { name: 'salary', type: 'income', icon: 'money-bill', color: '#4CAF50', isDefault: true },\n  { name: 'freelance', type: 'income', icon: 'laptop', color: '#2196F3', isDefault: true },\n  { name: 'investments', type: 'income', icon: 'chart-line', color: '#9C27B0', isDefault: true },\n  \n  // Expense categories\n  { name: 'food', type: 'expense', icon: 'utensils', color: '#FF9800', isDefault: true },\n  { name: 'transport', type: 'expense', icon: 'car', color: '#607D8B', isDefault: true },\n  { name: 'utilities', type: 'expense', icon: 'bolt', color: '#FFC107', isDefault: true },\n  { name: 'rent', type: 'expense', icon: 'home', color: '#E91E63', isDefault: true },\n  { name: 'entertainment', type: 'expense', icon: 'film', color: '#795548', isDefault: true },\n  { name: 'shopping', type: 'expense', icon: 'shopping-cart', color: '#009688', isDefault: true },\n  { name: 'health', type: 'expense', icon: 'heartbeat', color: '#F44336', isDefault: true }\n];\n\n// Register User\nconst register = async (req, res) => {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const userExists = await User.findOne({ email });\n    if (userExists) {\n      throw new BadRequestError('User already exists');\n    }\n\n    // Create user\n    const user = await User.create({\n      name,\n      email,\n      password\n    });\n\n    // Create default wallet\n    await Wallet.create({\n      userId: user._id,\n      name: 'Main Wallet',\n      currency: 'USD',\n      balance: 0,\n      isDefault: true\n    });\n\n    // Create default categories for the new user\n    const categories = defaultCategories.map(category => ({\n      ...category,\n      userId: user.id\n    }));\n    await Category.insertMany(categories);\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(201).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Login User\nconst login = async (req, res) => {\n  try {\n    const { email, password } = req.body;\n\n    // Check if user exists\n    const user = await User.findOne({ email }).select('+password');\n    if (!user) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Check if password matches\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(200).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Get current user\nconst getCurrentUser = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: user\n    });\n  } catch (error) {\n    console.error('Get current user error:', error);\n    throw error;\n  }\n};\n\n// Verify token and get current user\nconst verifyToken = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Token verification error:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  register,\n  login,\n  getCurrentUser,\n  verifyToken\n};",
          "controllers/budgetController.js": "const Budget = require('../models/Budget');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all budgets for a user\nexports.getBudgets = async (req, res, next) => {\n  try {\n    const { month, year } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.id };\n    \n    // Add month and year to query if provided\n    if (month && year) {\n      query.month = parseInt(month);\n      query.year = parseInt(year);\n    }\n\n    const budgets = await Budget.find(query).sort({ category: 1 });\n\n    // Calculate total budget\n    const totalBudget = budgets.reduce((sum, budget) => sum + budget.limit, 0);\n\n    res.json({\n      success: true,\n      count: budgets.length,\n      totalBudget,\n      data: budgets\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single budget\nexports.getBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Add or Update budget\nexports.addOrUpdateBudget = async (req, res, next) => {\n  try {\n    const { category, limit, month, year } = req.body;\n\n    // Validate required fields\n    if (!category || !limit || !month || !year) {\n      return next(new ErrorResponse('Please provide category, limit, month and year', 400));\n    }\n\n    // Validate month\n    if (month < 1 || month > 12) {\n      return next(new ErrorResponse('Month must be between 1 and 12', 400));\n    }\n\n    // Validate limit\n    if (limit <= 0) {\n      return next(new ErrorResponse('Limit must be greater than 0', 400));\n    }\n\n    // Check if budget exists\n    let budget = await Budget.findOne({ \n      userId: req.user.id, \n      category, \n      month, \n      year \n    });\n\n    if (budget) {\n      // Update existing budget\n      budget.limit = limit;\n      await budget.save();\n      \n      return res.json({\n        success: true,\n        data: budget\n      });\n    }\n\n    // Create new budget\n    budget = new Budget({\n      userId: req.user.id,\n      category,\n      limit,\n      month,\n      year\n    });\n\n    await budget.save();\n\n    res.status(201).json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete budget\nexports.deleteBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    await budget.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n",
          "controllers/categoryController.js": "const Category = require('../models/Category');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all categories for a user\nexports.getCategories = async (req, res, next) => {\n  try {\n    const { type } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.userId };\n    \n    // Add type filter if provided\n    if (type) {\n      query.type = type;\n    }\n\n    const categories = await Category.find(query).sort({ name: 1 });\n\n    res.json({\n      success: true,\n      count: categories.length,\n      data: categories\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single category\nexports.getCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Create new category\nexports.createCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Validate required fields\n    if (!name || !type) {\n      return next(new ErrorResponse('Please provide name and type', 400));\n    }\n\n    // Validate type\n    if (!['income', 'expense'].includes(type)) {\n      return next(new ErrorResponse('Type must be either income or expense', 400));\n    }\n\n    // Check if category already exists for this user\n    const existingCategory = await Category.findOne({\n      userId: req.user.userId,\n      name: name.toLowerCase()\n    });\n\n    if (existingCategory) {\n      return next(new ErrorResponse('Category already exists', 400));\n    }\n\n    const category = await Category.create({\n      userId: req.user.userId,\n      name: name.toLowerCase(),\n      type,\n      icon: icon || 'default',\n      color: color || '#000000'\n    });\n\n    res.status(201).json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Update category\nexports.updateCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Find category\n    let category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow updating default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot update default category', 400));\n    }\n\n    // Check if new name already exists\n    if (name && name !== category.name) {\n      const existingCategory = await Category.findOne({\n        userId: req.user.userId,\n        name: name.toLowerCase()\n      });\n\n      if (existingCategory) {\n        return next(new ErrorResponse('Category name already exists', 400));\n      }\n    }\n\n    // Update fields\n    if (name) category.name = name.toLowerCase();\n    if (type) category.type = type;\n    if (icon) category.icon = icon;\n    if (color) category.color = color;\n\n    await category.save();\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete category\nexports.deleteCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow deleting default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot delete default category', 400));\n    }\n\n    await category.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n}; ",
          "controllers/scheduledTransactionController.js": "const ScheduledTransaction = require('../models/ScheduledTransaction');\nconst Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all scheduled transactions for a user\nconst getScheduledTransactions = async (req, res) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            userId: req.user.userId\n        }).sort({ dayOfMonth: 1 });\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransactions\n        });\n    } catch (error) {\n        console.error('Error in getScheduledTransactions:', error);\n        throw error;\n    }\n};\n\n// Create a new scheduled transaction\nconst createScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category || !dayOfMonth || !walletId) {\n            throw new BadRequestError('Please provide type, amount, category, dayOfMonth and walletId');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Validate day of month\n        if (dayOfMonth < 1 || dayOfMonth > 31) {\n            throw new BadRequestError('Day of month must be between 1 and 31');\n        }\n\n        // Find wallet\n        const wallet = await Wallet.findOne({\n            _id: walletId,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Create scheduled transaction\n        const scheduledTransaction = await ScheduledTransaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '',\n            dayOfMonth,\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        res.status(201).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in createScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Update a scheduled transaction\nconst updateScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, isActive, affectBalance } = req.body;\n\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        // Update fields if provided\n        if (type) scheduledTransaction.type = type;\n        if (amount) scheduledTransaction.amount = amount;\n        if (category) scheduledTransaction.category = category;\n        if (description !== undefined) scheduledTransaction.description = description;\n        if (dayOfMonth) scheduledTransaction.dayOfMonth = dayOfMonth;\n        if (isActive !== undefined) scheduledTransaction.isActive = isActive;\n        if (affectBalance !== undefined) scheduledTransaction.affectBalance = affectBalance;\n        if (walletId) {\n            const wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n            if (!wallet) {\n                throw new NotFoundError('Wallet not found');\n            }\n            scheduledTransaction.walletId = wallet._id;\n        }\n\n        await scheduledTransaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in updateScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete a scheduled transaction\nconst deleteScheduledTransaction = async (req, res) => {\n    try {\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        await scheduledTransaction.deleteOne();\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Execute scheduled transactions for a given day\nconst executeScheduledTransactions = async (dayOfMonth) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            dayOfMonth,\n            isActive: true\n        });\n\n        for (const scheduled of scheduledTransactions) {\n            // Check if already executed this month\n            const now = new Date();\n            const lastExecuted = scheduled.lastExecuted;\n            if (lastExecuted && \n                lastExecuted.getMonth() === now.getMonth() && \n                lastExecuted.getFullYear() === now.getFullYear()) {\n                continue;\n            }\n\n            // Create the actual transaction\n            const transaction = await Transaction.create({\n                userId: scheduled.userId,\n                walletId: scheduled.walletId,\n                type: scheduled.type,\n                amount: scheduled.amount,\n                category: scheduled.category,\n                description: scheduled.description,\n                date: new Date(),\n                affectBalance: scheduled.affectBalance\n            });\n\n            // Update wallet balance if needed\n            if (scheduled.affectBalance) {\n                const wallet = await Wallet.findById(scheduled.walletId);\n                if (wallet) {\n                    if (scheduled.type === 'income') {\n                        wallet.balance += scheduled.amount;\n                    } else {\n                        if (wallet.balance < scheduled.amount) {\n                            console.error(`Insufficient balance for scheduled transaction ${scheduled._id}`);\n                            continue;\n                        }\n                        wallet.balance -= scheduled.amount;\n                    }\n                    wallet.lastUpdated = new Date();\n                    await wallet.save();\n                }\n            }\n\n            // Update last executed date\n            scheduled.lastExecuted = new Date();\n            await scheduled.save();\n        }\n    } catch (error) {\n        console.error('Error executing scheduled transactions:', error);\n    }\n};\n\nmodule.exports = {\n    getScheduledTransactions,\n    createScheduledTransaction,\n    updateScheduledTransaction,\n    deleteScheduledTransaction,\n    executeScheduledTransactions\n}; ",
          "controllers/transactionController.js": "const Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all transactions\nconst getTransactions = async (req, res) => {\n    try {\n        const { month, year, type, category, walletId } = req.query;\n        const query = { userId: req.user.userId };\n\n        // Add filters if provided\n        if (month && year) {\n            const startDate = new Date(year, month - 1, 1);\n            const endDate = new Date(year, month, 0);\n            query.date = { $gte: startDate, $lte: endDate };\n        }\n        if (type) query.type = type;\n        if (category) query.category = category;\n        if (walletId) query.walletId = walletId;\n\n        const transactions = await Transaction.find(query).sort({ date: -1 });\n\n        // Calculate totals\n        const totals = transactions.reduce((acc, transaction) => {\n            if (transaction.type === 'income') {\n                acc.income += transaction.amount;\n            } else {\n                acc.expense += transaction.amount;\n            }\n            return acc;\n        }, { income: 0, expense: 0 });\n\n        res.status(200).json({\n            success: true,\n            count: transactions.length,\n            totals,\n            data: transactions\n        });\n    } catch (error) {\n        console.error('Error in getTransactions:', error);\n        throw error;\n    }\n};\n\n// Get single transaction\nconst getTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in getTransaction:', error);\n        throw error;\n    }\n};\n\n// Add transaction\nconst addTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category) {\n            throw new BadRequestError('Please provide type, amount and category');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Find wallet - use provided walletId or default wallet\n        let wallet;\n        if (walletId) {\n            wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n        } else {\n            // Find default wallet\n            wallet = await Wallet.findOne({\n                userId: req.user.userId,\n                isDefault: true\n            });\n        }\n\n        if (!wallet) {\n            throw new NotFoundError('No wallet found. Please create a wallet first.');\n        }\n\n        // Create transaction\n        const transaction = await Transaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '', // Make description optional\n            date: date || Date.now(),\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        // Update wallet balance only if affectBalance is true\n        if (affectBalance !== false) {\n            if (type === 'income') {\n                wallet.balance += amount;\n            } else {\n                if (wallet.balance < amount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                wallet.balance -= amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(201).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in addTransaction:', error);\n        throw error;\n    }\n};\n\n// Update transaction\nconst updateTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n        \n        console.log('Debug - Update Transaction Request:');\n        console.log('Transaction ID from params:', req.params.id);\n        console.log('User ID from request:', req.user.userId);\n        console.log('Request body:', req.body);\n\n        // Validate transaction ID\n        if (!req.params.id) {\n            throw new BadRequestError('Transaction ID is required');\n        }\n\n        // Find the transaction and log the query\n        const transactionQuery = {\n            _id: req.params.id,\n            userId: req.user.userId\n        };\n        console.log('Finding transaction with query:', transactionQuery);\n\n        const transaction = await Transaction.findOne(transactionQuery);\n        console.log('Found transaction:', transaction ? {\n            id: transaction._id,\n            type: transaction.type,\n            amount: transaction.amount,\n            walletId: transaction.walletId,\n            userId: transaction.userId\n        } : 'No transaction found');\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Find the current wallet\n        const oldWallet = await Wallet.findOne({\n            _id: transaction.walletId,\n            userId: req.user.userId\n        });\n\n        if (!oldWallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Find the new wallet if walletId is provided\n        let newWallet = oldWallet;\n        if (walletId) {\n            // Safely compare wallet IDs\n            const currentWalletId = transaction.walletId.toString();\n            const newWalletId = walletId.toString();\n            \n            console.log('Wallet ID comparison:', {\n                currentWalletId,\n                newWalletId,\n                isDifferent: newWalletId !== currentWalletId\n            });\n            \n            if (newWalletId !== currentWalletId) {\n                newWallet = await Wallet.findOne({\n                    _id: walletId,\n                    userId: req.user.userId\n                });\n                console.log('Found new wallet:', newWallet ? {\n                    id: newWallet._id,\n                    name: newWallet.name,\n                    balance: newWallet.balance\n                } : 'No new wallet found');\n                \n                if (!newWallet) {\n                    throw new NotFoundError('New wallet not found');\n                }\n            }\n        }\n\n        // Calculate balance changes\n        const oldAmount = transaction.amount;\n        const newAmount = amount || oldAmount;\n        const oldType = transaction.type;\n        const newType = type || oldType;\n        const oldAffectBalance = transaction.affectBalance;\n        const newAffectBalance = affectBalance !== undefined ? affectBalance : oldAffectBalance;\n\n        // Update old wallet balance if the old transaction affected balance\n        if (oldAffectBalance) {\n            if (oldType === 'income') {\n                oldWallet.balance -= oldAmount;\n            } else {\n                oldWallet.balance += oldAmount;\n            }\n            oldWallet.lastUpdated = Date.now();\n            await oldWallet.save();\n        }\n\n        // Update new wallet balance if the new transaction should affect balance\n        if (newAffectBalance) {\n            if (newType === 'income') {\n                newWallet.balance += newAmount;\n            } else {\n                if (newWallet.balance < newAmount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                newWallet.balance -= newAmount;\n            }\n            newWallet.lastUpdated = Date.now();\n            await newWallet.save();\n        }\n\n        // Update transaction\n        if (type) transaction.type = type;\n        if (amount) transaction.amount = amount;\n        if (category) transaction.category = category;\n        if (description !== undefined) transaction.description = description;\n        if (date) transaction.date = date;\n        if (walletId) transaction.walletId = walletId;\n        if (affectBalance !== undefined) transaction.affectBalance = affectBalance;\n\n        await transaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in updateTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete transaction\nconst deleteTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Update wallet balance only if the transaction affected balance\n        if (transaction.affectBalance) {\n            const wallet = await Wallet.findOne({\n                _id: transaction.walletId,\n                userId: req.user.userId\n            });\n\n            if (transaction.type === 'income') {\n                wallet.balance -= transaction.amount;\n            } else {\n                wallet.balance += transaction.amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        // Use deleteOne instead of remove\n        await Transaction.deleteOne({ _id: transaction._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteTransaction:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getTransactions,\n    getTransaction,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction\n};\n",
          "controllers/walletController.js": "const Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all wallets for a user\nconst getWallets = async (req, res) => {\n    try {\n        const wallets = await Wallet.find({ userId: req.user.userId });\n        res.status(200).json({\n            success: true,\n            count: wallets.length,\n            data: wallets\n        });\n    } catch (error) {\n        console.error('Error in getWallets:', error);\n        throw error;\n    }\n};\n\n// Get single wallet\nconst getWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in getWallet:', error);\n        throw error;\n    }\n};\n\n// Create new wallet\nconst createWallet = async (req, res) => {\n    try {\n        const { name, currency, balance, isDefault } = req.body;\n\n        // Validate required fields\n        if (!name || !currency) {\n            throw new BadRequestError('Please provide name and currency');\n        }\n\n        // Validate balance if provided\n        if (balance !== undefined && balance < 0) {\n            throw new BadRequestError('Balance cannot be negative');\n        }\n\n        // If this is set as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        // Create wallet\n        const wallet = await Wallet.create({\n            userId: req.user.userId,\n            name,\n            currency,\n            balance: balance || 0,\n            isDefault: isDefault || false\n        });\n\n        res.status(201).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in createWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Set initial balance\nconst setInitialBalance = async (req, res) => {\n    try {\n        const { balance, currency } = req.body;\n\n        if (!balance || balance < 0) {\n            throw new BadRequestError('Please provide a valid initial balance');\n        }\n\n        // Find or create default wallet\n        let wallet = await Wallet.findOne({\n            userId: req.user.userId,\n            isDefault: true\n        });\n\n        if (!wallet) {\n            wallet = await Wallet.create({\n                userId: req.user.userId,\n                balance,\n                currency: currency || 'USD',\n                isDefault: true,\n                name: 'Main Wallet'\n            });\n        } else {\n            wallet.balance = balance;\n            if (currency) wallet.currency = currency;\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in setInitialBalance:', error);\n        throw error;\n    }\n};\n\n// Update wallet\nconst updateWallet = async (req, res) => {\n    try {\n        const { name, currency, isDefault } = req.body;\n\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // If setting as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        if (name) wallet.name = name;\n        if (currency) wallet.currency = currency;\n        if (typeof isDefault === 'boolean') wallet.isDefault = isDefault;\n        wallet.lastUpdated = Date.now();\n\n        await wallet.save();\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in updateWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Delete wallet\nconst deleteWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        if (wallet.isDefault) {\n            throw new BadRequestError('Cannot delete default wallet');\n        }\n\n        await Wallet.deleteOne({ _id: wallet._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteWallet:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getWallets,\n    getWallet,\n    createWallet,\n    setInitialBalance,\n    updateWallet,\n    deleteWallet\n}; ",
          "errors.js": "class CustomError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n\nclass BadRequestError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 400;\n    }\n}\n\nclass UnauthorizedError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 401;\n    }\n}\n\nclass ForbiddenError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 403;\n    }\n}\n\nclass NotFoundError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 404;\n    }\n}\n\nclass ConflictError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 409;\n    }\n}\n\nclass InternalServerError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 500;\n    }\n}\n\nmodule.exports = {\n    BadRequestError,\n    UnauthorizedError,\n    ForbiddenError,\n    NotFoundError,\n    ConflictError,\n    InternalServerError\n}; ",
          "index.js": "const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst connectDB = require('./config/db');\nconst errorHandler = require('./middleware/error');\nconst authRoutes = require('./routes/auth');\nconst transactionRoutes = require('./routes/transactions');\nconst budgetRoutes = require('./routes/budget');\nconst categoryRoutes = require('./routes/categories');\nconst walletRoutes = require('./routes/wallets');\nconst scheduledTransactionRoutes = require('./routes/scheduledTransactions');\n\n// Load env vars\ndotenv.config();\n\n// Connect to database\nconnectDB();\n\nconst app = express();\n\n// CORS configuration\napp.use(cors({\n    origin: '*', // Allow all origins\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],\n    credentials: true,\n    maxAge: 86400 // 24 hours\n}));\n\n// Body parser\napp.use(express.json());\n\n// Mount routers\napp.use('/api/auth', authRoutes);\napp.use('/api/transactions', transactionRoutes);\napp.use('/api/budget', budgetRoutes);\napp.use('/api/categories', categoryRoutes);\napp.use('/api/wallets', walletRoutes);\napp.use('/api/scheduled-transactions', scheduledTransactionRoutes);\n\n// Error handler (should be last piece of middleware)\napp.use((err, req, res, next) => {\n    console.error(err);\n\n    // Handle custom errors\n    if (err.statusCode) {\n        return res.status(err.statusCode).json({\n            success: false,\n            error: err.message\n        });\n    }\n\n    // Handle mongoose validation errors\n    if (err.name === 'ValidationError') {\n        const messages = Object.values(err.errors).map(val => val.message);\n        return res.status(400).json({\n            success: false,\n            error: messages\n        });\n    }\n\n    // Handle mongoose duplicate key errors\n    if (err.code === 11000) {\n        return res.status(400).json({\n            success: false,\n            error: 'Duplicate field value entered'\n        });\n    }\n\n    // Handle mongoose cast errors\n    if (err.name === 'CastError') {\n        return res.status(400).json({\n            success: false,\n            error: 'Invalid ID format'\n        });\n    }\n\n    // Default error\n    res.status(500).json({\n        success: false,\n        error: 'Server Error'\n    });\n});\n\nconst PORT = process.env.PORT || 5000;\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (err, promise) => {\n  console.log(`Error: ${err.message}`);\n  // Close server & exit process\n  process.exit(1);\n});\n",
          "middleware/authentication.js": "const jwt = require('jsonwebtoken');\nconst { UnauthorizedError } = require('../errors');\n\nconst authenticateUser = async (req, res, next) => {\n    try {\n        // Get token from header\n        const authHeader = req.headers.authorization;\n        console.log('Auth header:', authHeader);\n        \n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.log('Invalid auth header format');\n            throw new UnauthorizedError('Authentication invalid');\n        }\n\n        const token = authHeader.split(' ')[1];\n        console.log('Token:', token);\n\n        try {\n            const payload = jwt.verify(token, process.env.JWT_SECRET);\n            console.log('Token payload:', payload);\n            \n            // Check if payload has the required fields\n            if (!payload.id) {\n                console.log('Missing id in token payload');\n                throw new UnauthorizedError('Invalid token payload');\n            }\n\n            // Attach the user to the request object\n            req.user = {\n                userId: payload.id,\n                name: payload.name\n            };\n            \n            next();\n        } catch (error) {\n            console.error('JWT verification error:', error);\n            throw new UnauthorizedError('Authentication invalid');\n        }\n    } catch (error) {\n        console.error('Authentication error:', error);\n        next(error);\n    }\n};\n\nmodule.exports = {\n    authenticateUser\n}; ",
          "middleware/error.js": "const ErrorResponse = require('../utils/errorResponse');\n\nconst errorHandler = (err, req, res, next) => {\n  let error = { ...err };\n  error.message = err.message;\n\n  // Log to console for dev\n  console.error(err);\n\n  // Mongoose bad ObjectId\n  if (err.name === 'CastError') {\n    const message = `Resource not found`;\n    error = new ErrorResponse(message, 404);\n  }\n\n  // Mongoose duplicate key\n  if (err.code === 11000) {\n    const message = 'Duplicate field value entered';\n    error = new ErrorResponse(message, 400);\n  }\n\n  // Mongoose validation error\n  if (err.name === 'ValidationError') {\n    const message = Object.values(err.errors).map(val => val.message);\n    error = new ErrorResponse(message, 400);\n  }\n\n  res.status(error.statusCode || 500).json({\n    success: false,\n    error: error.message || 'Server Error',\n    stack: process.env.NODE_ENV === 'development' ? err.stack : undefined\n  });\n};\n\nmodule.exports = errorHandler; ",
          "models/Budget.js": "const mongoose = require('mongoose');\n\nconst budgetSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  category: { type: String, required: true },\n  limit: { type: Number, required: true },\n  month: { type: Number, required: true }, // 1–12\n  year: { type: Number, required: true },\n}, { timestamps: true });\n\nmodule.exports = mongoose.model('Budget', budgetSchema);\n",
          "models/Category.js": "const mongoose = require('mongoose');\n\nconst categorySchema = new mongoose.Schema({\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  name: {\n    type: String,\n    required: [true, 'Please provide a category name'],\n    trim: true\n  },\n  type: {\n    type: String,\n    enum: ['income', 'expense'],\n    required: [true, 'Please specify if this is an income or expense category']\n  },\n  icon: {\n    type: String,\n    default: 'default' // You can use this to store icon names or emojis\n  },\n  color: {\n    type: String,\n    default: '#000000' // Default color in hex\n  },\n  isDefault: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true\n});\n\n// Compound index to ensure unique category names per user\ncategorySchema.index({ userId: 1, name: 1 }, { unique: true });\n\nmodule.exports = mongoose.model('Category', categorySchema); ",
          "models/ScheduledTransaction.js": "const mongoose = require('mongoose');\n\nconst scheduledTransactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 },\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  dayOfMonth: { type: Number, required: true, min: 1, max: 31 },\n  isActive: { type: Boolean, default: true },\n  lastExecuted: { type: Date },\n  affectBalance: { type: Boolean, default: true },\n}, { timestamps: true });\n\n// Index for efficient querying\nscheduledTransactionSchema.index({ userId: 1, dayOfMonth: 1 });\nscheduledTransactionSchema.index({ isActive: 1 });\n\nconst ScheduledTransaction = mongoose.model('ScheduledTransaction', scheduledTransactionSchema);\n\nmodule.exports = ScheduledTransaction; ",
          "models/Transaction.js": "const mongoose = require('mongoose');\n\nconst transactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 }, // store as cents if needed\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  date: { type: Date, default: Date.now },\n}, { timestamps: true });\n\n// Index for efficient querying\ntransactionSchema.index({ userId: 1, date: -1 });\ntransactionSchema.index({ userId: 1, walletId: 1, date: -1 });\n\nmodule.exports = mongoose.model('Transaction', transactionSchema);\n",
          "models/User.js": "const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Please add a name'],\n  },\n  email: {\n    type: String,\n    required: [true, 'Please add an email'],\n    unique: true,\n    match: [\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Please add a valid email',\n    ],\n  },\n  password: {\n    type: String,\n    required: [true, 'Please add a password'],\n    minlength: 6,\n    select: false,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n// Encrypt password using bcrypt\nUserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) {\n    next();\n  }\n\n  const salt = await bcrypt.genSalt(10);\n  this.password = await bcrypt.hash(this.password, salt);\n});\n\n// Match user entered password to hashed password in database\nUserSchema.methods.comparePassword = async function (enteredPassword) {\n  return await bcrypt.compare(enteredPassword, this.password);\n};\n\n// Sign JWT and return\nUserSchema.methods.getSignedJwtToken = function () {\n  return jwt.sign({ id: this._id }, process.env.JWT_SECRET, {\n    expiresIn: process.env.JWT_EXPIRE,\n  });\n};\n\nmodule.exports = mongoose.model('User', UserSchema); ",
          "models/Wallet.js": "const mongoose = require('mongoose');\n\nconst walletSchema = new mongoose.Schema({\n    userId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    balance: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    currency: {\n        type: String,\n        required: true,\n        default: 'USD'\n    },\n    name: {\n        type: String,\n        required: true,\n        default: 'Main Wallet'\n    },\n    isDefault: {\n        type: Boolean,\n        default: true\n    },\n    lastUpdated: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n\n// Ensure a user can only have one default wallet\nwalletSchema.index({ userId: 1, isDefault: 1 }, { \n    unique: true,\n    partialFilterExpression: { isDefault: true }\n});\n\nmodule.exports = mongoose.model('Wallet', walletSchema); ",
          "package-lock.json": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"budget-tracker\",\n      \"version\": \"1.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"bcryptjs\": \"^2.4.3\",\n        \"cors\": \"^2.8.5\",\n        \"dotenv\": \"^16.0.3\",\n        \"express\": \"^4.18.2\",\n        \"jsonwebtoken\": \"^9.0.0\",\n        \"mongoose\": \"^7.0.3\",\n        \"next-themes\": \"^0.4.6\",\n        \"node-cron\": \"^4.1.0\",\n        \"recharts\": \"^2.15.3\",\n        \"validator\": \"^13.9.0\"\n      },\n      \"devDependencies\": {\n        \"nodemon\": \"^2.0.22\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz\",\n      \"integrity\": \"sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@mongodb-js/saslprep\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz\",\n      \"integrity\": \"sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"sparse-bitfield\": \"^3.0.3\"\n      }\n    },\n    \"node_modules/@types/d3-array\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz\",\n      \"integrity\": \"sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-color\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz\",\n      \"integrity\": \"sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-ease\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz\",\n      \"integrity\": \"sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-interpolate\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz\",\n      \"integrity\": \"sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-color\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-path\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz\",\n      \"integrity\": \"sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-scale\": {\n      \"version\": \"4.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz\",\n      \"integrity\": \"sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-time\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-shape\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz\",\n      \"integrity\": \"sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-path\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-time\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz\",\n      \"integrity\": \"sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-timer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz\",\n      \"integrity\": \"sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"24.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-24.0.1.tgz\",\n      \"integrity\": \"sha512-MX4Zioh39chHlDJbKmEgydJDS3tspMP/lnQC67G3SWsTnb9NeYVWOjkxpOSy4oMfPs4StcWHwBrvUb4ybfnuaw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"undici-types\": \"~7.8.0\"\n      }\n    },\n    \"node_modules/@types/webidl-conversions\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz\",\n      \"integrity\": \"sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/whatwg-url\": {\n      \"version\": \"8.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz\",\n      \"integrity\": \"sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"@types/webidl-conversions\": \"*\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/bcryptjs\": {\n      \"version\": \"2.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\n      \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.13.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bson\": {\n      \"version\": \"5.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/bson/-/bson-5.5.1.tgz\",\n      \"integrity\": \"sha512-ix0EwukN2EpC0SRWIj/7B5+A6uQMQy6KMREI9qQqvgpkV2frH63T0UDVd1SYedL6dNCmDBYB3QtXi4ISk9YT+g==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      }\n    },\n    \"node_modules/buffer-equal-constant-time\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\n      \"integrity\": \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/clsx\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz\",\n      \"integrity\": \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cors\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-assign\": \"^4\",\n        \"vary\": \"^1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/d3-array\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz\",\n      \"integrity\": \"sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"internmap\": \"1 - 2\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-color\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz\",\n      \"integrity\": \"sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-ease\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz\",\n      \"integrity\": \"sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-format\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz\",\n      \"integrity\": \"sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-interpolate\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz\",\n      \"integrity\": \"sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-color\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-path\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz\",\n      \"integrity\": \"sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-scale\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz\",\n      \"integrity\": \"sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2.10.0 - 3\",\n        \"d3-format\": \"1 - 3\",\n        \"d3-interpolate\": \"1.2.0 - 3\",\n        \"d3-time\": \"2.1.1 - 3\",\n        \"d3-time-format\": \"2 - 4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-shape\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz\",\n      \"integrity\": \"sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-path\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz\",\n      \"integrity\": \"sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time-format\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz\",\n      \"integrity\": \"sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-time\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-timer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz\",\n      \"integrity\": \"sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decimal.js-light\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz\",\n      \"integrity\": \"sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/dom-helpers\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz\",\n      \"integrity\": \"sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.7\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz\",\n      \"integrity\": \"sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://dotenvx.com\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ecdsa-sig-formatter\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\n      \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/eventemitter3\": {\n      \"version\": \"4.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz\",\n      \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.3\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.7.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.3.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.3\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.12\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.13.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.19.0\",\n        \"serve-static\": \"1.16.2\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/express\"\n      }\n    },\n    \"node_modules/express/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/express/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-equals\": {\n      \"version\": \"5.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz\",\n      \"integrity\": \"sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ignore-by-default\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/internmap\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz\",\n      \"integrity\": \"sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonwebtoken\": {\n      \"version\": \"9.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\n      \"integrity\": \"sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jws\": \"^3.2.2\",\n        \"lodash.includes\": \"^4.3.0\",\n        \"lodash.isboolean\": \"^3.0.3\",\n        \"lodash.isinteger\": \"^4.0.4\",\n        \"lodash.isnumber\": \"^3.0.3\",\n        \"lodash.isplainobject\": \"^4.0.6\",\n        \"lodash.isstring\": \"^4.0.1\",\n        \"lodash.once\": \"^4.0.0\",\n        \"ms\": \"^2.1.1\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\",\n        \"npm\": \">=6\"\n      }\n    },\n    \"node_modules/jwa\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz\",\n      \"integrity\": \"sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-equal-constant-time\": \"^1.0.1\",\n        \"ecdsa-sig-formatter\": \"1.0.11\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/jws\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\n      \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jwa\": \"^1.4.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/kareem\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n      \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.includes\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz\",\n      \"integrity\": \"sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isboolean\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz\",\n      \"integrity\": \"sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isinteger\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz\",\n      \"integrity\": \"sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isnumber\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz\",\n      \"integrity\": \"sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isplainobject\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz\",\n      \"integrity\": \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isstring\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz\",\n      \"integrity\": \"sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.once\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/memory-pager\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n      \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/mongodb\": {\n      \"version\": \"5.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-5.9.2.tgz\",\n      \"integrity\": \"sha512-H60HecKO4Bc+7dhOv4sJlgvenK4fQNqqUIlXxZYQNbfEWSALGAwGoyJd/0Qwk4TttFXUOHJ2ZJQe/52ScaUwtQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"mongodb-connection-string-url\": \"^2.6.0\",\n        \"socks\": \"^2.7.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"optionalDependencies\": {\n        \"@mongodb-js/saslprep\": \"^1.1.0\"\n      },\n      \"peerDependencies\": {\n        \"@aws-sdk/credential-providers\": \"^3.188.0\",\n        \"@mongodb-js/zstd\": \"^1.0.0\",\n        \"kerberos\": \"^1.0.0 || ^2.0.0\",\n        \"mongodb-client-encryption\": \">=2.3.0 <3\",\n        \"snappy\": \"^7.2.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@aws-sdk/credential-providers\": {\n          \"optional\": true\n        },\n        \"@mongodb-js/zstd\": {\n          \"optional\": true\n        },\n        \"kerberos\": {\n          \"optional\": true\n        },\n        \"mongodb-client-encryption\": {\n          \"optional\": true\n        },\n        \"snappy\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/mongodb-connection-string-url\": {\n      \"version\": \"2.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz\",\n      \"integrity\": \"sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@types/whatwg-url\": \"^8.2.1\",\n        \"whatwg-url\": \"^11.0.0\"\n      }\n    },\n    \"node_modules/mongoose\": {\n      \"version\": \"7.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-7.8.7.tgz\",\n      \"integrity\": \"sha512-5Bo4CrUxrPITrhMKsqUTOkXXo2CoRC5tXxVQhnddCzqDMwRXfyStrxj1oY865g8gaekSBhxAeNkYyUSJvGm9Hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"kareem\": \"2.5.1\",\n        \"mongodb\": \"5.9.2\",\n        \"mpath\": \"0.9.0\",\n        \"mquery\": \"5.0.0\",\n        \"ms\": \"2.1.3\",\n        \"sift\": \"16.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/mongoose\"\n      }\n    },\n    \"node_modules/mpath\": {\n      \"version\": \"0.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n      \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/mquery\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n      \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"4.x\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/next-themes\": {\n      \"version\": \"0.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz\",\n      \"integrity\": \"sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"react\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\"\n      }\n    },\n    \"node_modules/node-cron\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-cron/-/node-cron-4.1.0.tgz\",\n      \"integrity\": \"sha512-OS+3ORu+h03/haS6Di8Qr7CrVs4YaKZZOynZwQpyPZDnR3tqRbwJmuP2gVR16JfhLgyNlloAV1VTrrWlRogCFA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/nodemon\": {\n      \"version\": \"2.0.22\",\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-2.0.22.tgz\",\n      \"integrity\": \"sha512-B8YqaKMmyuCO7BowF1Z1/mkPqLk6cs/l63Ojtd6otKjMx47Dq1utxfRxcavH1I7VSaL8n5BUaoutadnsX3AAVQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chokidar\": \"^3.5.2\",\n        \"debug\": \"^3.2.7\",\n        \"ignore-by-default\": \"^1.0.1\",\n        \"minimatch\": \"^3.1.2\",\n        \"pstree.remy\": \"^1.1.8\",\n        \"semver\": \"^5.7.1\",\n        \"simple-update-notifier\": \"^1.0.7\",\n        \"supports-color\": \"^5.5.0\",\n        \"touch\": \"^3.1.0\",\n        \"undefsafe\": \"^2.0.5\"\n      },\n      \"bin\": {\n        \"nodemon\": \"bin/nodemon.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/nodemon\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/pstree.remy\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/react\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-19.1.0.tgz\",\n      \"integrity\": \"sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz\",\n      \"integrity\": \"sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"scheduler\": \"^0.26.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^19.1.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/react-smooth\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz\",\n      \"integrity\": \"sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-equals\": \"^5.0.1\",\n        \"prop-types\": \"^15.8.1\",\n        \"react-transition-group\": \"^4.4.5\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/react-transition-group\": {\n      \"version\": \"4.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz\",\n      \"integrity\": \"sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.5.5\",\n        \"dom-helpers\": \"^5.0.1\",\n        \"loose-envify\": \"^1.4.0\",\n        \"prop-types\": \"^15.6.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.6.0\",\n        \"react-dom\": \">=16.6.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/recharts\": {\n      \"version\": \"2.15.3\",\n      \"resolved\": \"https://registry.npmjs.org/recharts/-/recharts-2.15.3.tgz\",\n      \"integrity\": \"sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clsx\": \"^2.0.0\",\n        \"eventemitter3\": \"^4.0.1\",\n        \"lodash\": \"^4.17.21\",\n        \"react-is\": \"^18.3.1\",\n        \"react-smooth\": \"^4.0.4\",\n        \"recharts-scale\": \"^0.4.4\",\n        \"tiny-invariant\": \"^1.3.1\",\n        \"victory-vendor\": \"^36.6.8\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/recharts-scale\": {\n      \"version\": \"0.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz\",\n      \"integrity\": \"sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decimal.js-light\": \"^2.4.1\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.26.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz\",\n      \"integrity\": \"sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/send/node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sift\": {\n      \"version\": \"16.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n      \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/simple-update-notifier\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz\",\n      \"integrity\": \"sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"semver\": \"~7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/simple-update-notifier/node_modules/semver\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.0.0.tgz\",\n      \"integrity\": \"sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.5.tgz\",\n      \"integrity\": \"sha512-iF+tNDQla22geJdTyJB1wM/qrX9DMRwWrciEPwWLPRWAUEM8sQiyxgckLxWT1f7+9VabJS0jTGGr4QgBuvi6Ww==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/sparse-bitfield\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n      \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"memory-pager\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tiny-invariant\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz\",\n      \"integrity\": \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/touch\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.1.tgz\",\n      \"integrity\": \"sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"nodetouch\": \"bin/nodetouch.js\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz\",\n      \"integrity\": \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/undefsafe\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"7.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\",\n      \"integrity\": \"sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/validator\": {\n      \"version\": \"13.15.15\",\n      \"resolved\": \"https://registry.npmjs.org/validator/-/validator-13.15.15.tgz\",\n      \"integrity\": \"sha512-BgWVbCI72aIQy937xbawcs+hrVaN/CZ2UwutgaJ36hGqRrLNM+f5LUT/YPRbo8IV/ASeFzXszezV+y2+rq3l8A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/victory-vendor\": {\n      \"version\": \"36.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz\",\n      \"integrity\": \"sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==\",\n      \"license\": \"MIT AND ISC\",\n      \"dependencies\": {\n        \"@types/d3-array\": \"^3.0.3\",\n        \"@types/d3-ease\": \"^3.0.0\",\n        \"@types/d3-interpolate\": \"^3.0.1\",\n        \"@types/d3-scale\": \"^4.0.2\",\n        \"@types/d3-shape\": \"^3.1.0\",\n        \"@types/d3-time\": \"^3.0.0\",\n        \"@types/d3-timer\": \"^3.0.0\",\n        \"d3-array\": \"^3.1.6\",\n        \"d3-ease\": \"^3.0.1\",\n        \"d3-interpolate\": \"^3.0.1\",\n        \"d3-scale\": \"^4.0.2\",\n        \"d3-shape\": \"^3.1.0\",\n        \"d3-time\": \"^3.0.0\",\n        \"d3-timer\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"11.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz\",\n      \"integrity\": \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tr46\": \"^3.0.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    }\n  }\n}\n",
          "package.json": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A budget tracking application\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"dev\": \"nodemon index.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bcryptjs\": \"^2.4.3\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.0.3\",\n    \"express\": \"^4.18.2\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"mongoose\": \"^7.0.3\",\n    \"next-themes\": \"^0.4.6\",\n    \"node-cron\": \"^4.1.0\",\n    \"recharts\": \"^2.15.3\",\n    \"validator\": \"^13.9.0\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.22\"\n  }\n}\n",
          "server.js": "const scheduledTransactionsRouter = require('./routes/scheduledTransactions');\nconst { scheduleDailyCheck } = require('./utils/scheduler');\n\n// Routes\napp.use('/api/auth', authRouter);\napp.use('/api/transactions', transactionsRouter);\napp.use('/api/budgets', budgetsRouter);\napp.use('/api/categories', categoriesRouter);\napp.use('/api/wallets', walletsRouter);\napp.use('/api/scheduled-transactions', scheduledTransactionsRouter);\n\n// Start the scheduler\nscheduleDailyCheck(); ",
          "utils/debugTransaction.js": "// Debug utility for transaction updates\nexport const debugTransactionUpdate = async (transactionId, updateData) => {\n    try {\n        console.log('Debug - Transaction Update Request:');\n        console.log('Transaction ID:', transactionId);\n        console.log('Update Data:', updateData);\n        \n        // Log the full request details\n        const requestDetails = {\n            url: `/api/transactions/${transactionId}`,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            data: updateData\n        };\n        \n        console.log('Full Request Details:', requestDetails);\n        \n        // Make the actual request\n        const response = await fetch(requestDetails.url, {\n            method: requestDetails.method,\n            headers: requestDetails.headers,\n            body: JSON.stringify(requestDetails.data)\n        });\n        \n        // Log response details\n        console.log('Response Status:', response.status);\n        const responseData = await response.json();\n        console.log('Response Data:', responseData);\n        \n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        return responseData;\n    } catch (error) {\n        console.error('Debug - Transaction Update Error:', error);\n        throw error;\n    }\n}; ",
          "utils/errorResponse.js": "class ErrorResponse extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\nmodule.exports = ErrorResponse; ",
          "utils/scheduler.js": "const cron = require('node-cron');\nconst { executeScheduledTransactions } = require('../controllers/scheduledTransactionController');\n\n// Run every day at midnight\nconst scheduleDailyCheck = () => {\n    cron.schedule('0 0 * * *', async () => {\n        const today = new Date();\n        const dayOfMonth = today.getDate();\n        \n        console.log(`Executing scheduled transactions for day ${dayOfMonth}`);\n        await executeScheduledTransactions(dayOfMonth);\n    });\n};\n\nmodule.exports = {\n    scheduleDailyCheck\n}; "
        },
        "directories": {
          "config": [],
          "controllers": [],
          "middleware": [],
          "models": [],
          "utils": []
        },
        "allFiles": [
          ".gitignore",
          "config/db.js",
          "controllers/authController.js",
          "controllers/budgetController.js",
          "controllers/categoryController.js",
          "controllers/scheduledTransactionController.js",
          "controllers/transactionController.js",
          "controllers/walletController.js",
          "errors.js",
          "index.js",
          "middleware/authentication.js",
          "middleware/error.js",
          "models/Budget.js",
          "models/Category.js",
          "models/ScheduledTransaction.js",
          "models/Transaction.js",
          "models/User.js",
          "models/Wallet.js",
          "package-lock.json",
          "package.json",
          "server.js",
          "utils/debugTransaction.js",
          "utils/errorResponse.js",
          "utils/scheduler.js"
        ],
        "allDirectories": [
          "config",
          "controllers",
          "middleware",
          "models",
          "utils"
        ],
        "fileContents": {
          ".gitignore": "# Dependencies\nnode_modules/\nnpm-debug.log\nyarn-debug.log\nyarn-error.log\npersonal-finance-app\n\n# Environment variables\n.env\n.env.local\n.env.*.local\n\n# IDE\n.idea/\n.vscode/\n*.swp\n*.swo\n\n# OS\n.DS_Store\nThumbs.db\n\n# Logs\nlogs\n*.log\n\n# Build output\ndist/\nbuild/\ncoverage/\n\n# Temporary files\n*.tmp\n*.temp\n.cache/ ",
          "config/db.js": "const mongoose = require('mongoose');\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    console.log(`MongoDB Connected: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB; ",
          "controllers/authController.js": "const User = require('../models/User');\nconst Category = require('../models/Category');\nconst jwt = require('jsonwebtoken');\nconst ErrorResponse = require('../utils/errorResponse');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, UnauthorizedError, NotFoundError } = require('../errors');\n\n// Default categories to create for new users\nconst defaultCategories = [\n  // Income categories\n  { name: 'salary', type: 'income', icon: 'money-bill', color: '#4CAF50', isDefault: true },\n  { name: 'freelance', type: 'income', icon: 'laptop', color: '#2196F3', isDefault: true },\n  { name: 'investments', type: 'income', icon: 'chart-line', color: '#9C27B0', isDefault: true },\n  \n  // Expense categories\n  { name: 'food', type: 'expense', icon: 'utensils', color: '#FF9800', isDefault: true },\n  { name: 'transport', type: 'expense', icon: 'car', color: '#607D8B', isDefault: true },\n  { name: 'utilities', type: 'expense', icon: 'bolt', color: '#FFC107', isDefault: true },\n  { name: 'rent', type: 'expense', icon: 'home', color: '#E91E63', isDefault: true },\n  { name: 'entertainment', type: 'expense', icon: 'film', color: '#795548', isDefault: true },\n  { name: 'shopping', type: 'expense', icon: 'shopping-cart', color: '#009688', isDefault: true },\n  { name: 'health', type: 'expense', icon: 'heartbeat', color: '#F44336', isDefault: true }\n];\n\n// Register User\nconst register = async (req, res) => {\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user already exists\n    const userExists = await User.findOne({ email });\n    if (userExists) {\n      throw new BadRequestError('User already exists');\n    }\n\n    // Create user\n    const user = await User.create({\n      name,\n      email,\n      password\n    });\n\n    // Create default wallet\n    await Wallet.create({\n      userId: user._id,\n      name: 'Main Wallet',\n      currency: 'USD',\n      balance: 0,\n      isDefault: true\n    });\n\n    // Create default categories for the new user\n    const categories = defaultCategories.map(category => ({\n      ...category,\n      userId: user.id\n    }));\n    await Category.insertMany(categories);\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(201).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Login User\nconst login = async (req, res) => {\n  try {\n    const { email, password } = req.body;\n\n    // Check if user exists\n    const user = await User.findOne({ email }).select('+password');\n    if (!user) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Check if password matches\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      throw new UnauthorizedError('Invalid credentials');\n    }\n\n    // Create token\n    const token = jwt.sign(\n      { id: user._id, name: user.name },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    res.status(200).json({\n      success: true,\n      token,\n      user: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Get current user\nconst getCurrentUser = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: user\n    });\n  } catch (error) {\n    console.error('Get current user error:', error);\n    throw error;\n  }\n};\n\n// Verify token and get current user\nconst verifyToken = async (req, res) => {\n  try {\n    const user = await User.findById(req.user.userId).select('-password');\n    if (!user) {\n      throw new NotFoundError('User not found');\n    }\n\n    res.status(200).json({\n      success: true,\n      data: {\n        id: user._id,\n        name: user.name,\n        email: user.email\n      }\n    });\n  } catch (error) {\n    console.error('Token verification error:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  register,\n  login,\n  getCurrentUser,\n  verifyToken\n};",
          "controllers/budgetController.js": "const Budget = require('../models/Budget');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all budgets for a user\nexports.getBudgets = async (req, res, next) => {\n  try {\n    const { month, year } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.id };\n    \n    // Add month and year to query if provided\n    if (month && year) {\n      query.month = parseInt(month);\n      query.year = parseInt(year);\n    }\n\n    const budgets = await Budget.find(query).sort({ category: 1 });\n\n    // Calculate total budget\n    const totalBudget = budgets.reduce((sum, budget) => sum + budget.limit, 0);\n\n    res.json({\n      success: true,\n      count: budgets.length,\n      totalBudget,\n      data: budgets\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single budget\nexports.getBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Add or Update budget\nexports.addOrUpdateBudget = async (req, res, next) => {\n  try {\n    const { category, limit, month, year } = req.body;\n\n    // Validate required fields\n    if (!category || !limit || !month || !year) {\n      return next(new ErrorResponse('Please provide category, limit, month and year', 400));\n    }\n\n    // Validate month\n    if (month < 1 || month > 12) {\n      return next(new ErrorResponse('Month must be between 1 and 12', 400));\n    }\n\n    // Validate limit\n    if (limit <= 0) {\n      return next(new ErrorResponse('Limit must be greater than 0', 400));\n    }\n\n    // Check if budget exists\n    let budget = await Budget.findOne({ \n      userId: req.user.id, \n      category, \n      month, \n      year \n    });\n\n    if (budget) {\n      // Update existing budget\n      budget.limit = limit;\n      await budget.save();\n      \n      return res.json({\n        success: true,\n        data: budget\n      });\n    }\n\n    // Create new budget\n    budget = new Budget({\n      userId: req.user.id,\n      category,\n      limit,\n      month,\n      year\n    });\n\n    await budget.save();\n\n    res.status(201).json({\n      success: true,\n      data: budget\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete budget\nexports.deleteBudget = async (req, res, next) => {\n  try {\n    const budget = await Budget.findOne({\n      _id: req.params.id,\n      userId: req.user.id\n    });\n\n    if (!budget) {\n      return next(new ErrorResponse('Budget not found', 404));\n    }\n\n    await budget.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n",
          "controllers/categoryController.js": "const Category = require('../models/Category');\nconst ErrorResponse = require('../utils/errorResponse');\n\n// Get all categories for a user\nexports.getCategories = async (req, res, next) => {\n  try {\n    const { type } = req.query;\n    \n    // Build query\n    const query = { userId: req.user.userId };\n    \n    // Add type filter if provided\n    if (type) {\n      query.type = type;\n    }\n\n    const categories = await Category.find(query).sort({ name: 1 });\n\n    res.json({\n      success: true,\n      count: categories.length,\n      data: categories\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Get single category\nexports.getCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Create new category\nexports.createCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Validate required fields\n    if (!name || !type) {\n      return next(new ErrorResponse('Please provide name and type', 400));\n    }\n\n    // Validate type\n    if (!['income', 'expense'].includes(type)) {\n      return next(new ErrorResponse('Type must be either income or expense', 400));\n    }\n\n    // Check if category already exists for this user\n    const existingCategory = await Category.findOne({\n      userId: req.user.userId,\n      name: name.toLowerCase()\n    });\n\n    if (existingCategory) {\n      return next(new ErrorResponse('Category already exists', 400));\n    }\n\n    const category = await Category.create({\n      userId: req.user.userId,\n      name: name.toLowerCase(),\n      type,\n      icon: icon || 'default',\n      color: color || '#000000'\n    });\n\n    res.status(201).json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Update category\nexports.updateCategory = async (req, res, next) => {\n  try {\n    const { name, type, icon, color } = req.body;\n\n    // Find category\n    let category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow updating default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot update default category', 400));\n    }\n\n    // Check if new name already exists\n    if (name && name !== category.name) {\n      const existingCategory = await Category.findOne({\n        userId: req.user.userId,\n        name: name.toLowerCase()\n      });\n\n      if (existingCategory) {\n        return next(new ErrorResponse('Category name already exists', 400));\n      }\n    }\n\n    // Update fields\n    if (name) category.name = name.toLowerCase();\n    if (type) category.type = type;\n    if (icon) category.icon = icon;\n    if (color) category.color = color;\n\n    await category.save();\n\n    res.json({\n      success: true,\n      data: category\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\n// Delete category\nexports.deleteCategory = async (req, res, next) => {\n  try {\n    const category = await Category.findOne({\n      _id: req.params.id,\n      userId: req.user.userId\n    });\n\n    if (!category) {\n      return next(new ErrorResponse('Category not found', 404));\n    }\n\n    // Don't allow deleting default categories\n    if (category.isDefault) {\n      return next(new ErrorResponse('Cannot delete default category', 400));\n    }\n\n    await category.deleteOne();\n\n    res.json({\n      success: true,\n      data: {}\n    });\n  } catch (err) {\n    next(err);\n  }\n}; ",
          "controllers/scheduledTransactionController.js": "const ScheduledTransaction = require('../models/ScheduledTransaction');\nconst Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all scheduled transactions for a user\nconst getScheduledTransactions = async (req, res) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            userId: req.user.userId\n        }).sort({ dayOfMonth: 1 });\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransactions\n        });\n    } catch (error) {\n        console.error('Error in getScheduledTransactions:', error);\n        throw error;\n    }\n};\n\n// Create a new scheduled transaction\nconst createScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category || !dayOfMonth || !walletId) {\n            throw new BadRequestError('Please provide type, amount, category, dayOfMonth and walletId');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Validate day of month\n        if (dayOfMonth < 1 || dayOfMonth > 31) {\n            throw new BadRequestError('Day of month must be between 1 and 31');\n        }\n\n        // Find wallet\n        const wallet = await Wallet.findOne({\n            _id: walletId,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Create scheduled transaction\n        const scheduledTransaction = await ScheduledTransaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '',\n            dayOfMonth,\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        res.status(201).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in createScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Update a scheduled transaction\nconst updateScheduledTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, dayOfMonth, walletId, isActive, affectBalance } = req.body;\n\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        // Update fields if provided\n        if (type) scheduledTransaction.type = type;\n        if (amount) scheduledTransaction.amount = amount;\n        if (category) scheduledTransaction.category = category;\n        if (description !== undefined) scheduledTransaction.description = description;\n        if (dayOfMonth) scheduledTransaction.dayOfMonth = dayOfMonth;\n        if (isActive !== undefined) scheduledTransaction.isActive = isActive;\n        if (affectBalance !== undefined) scheduledTransaction.affectBalance = affectBalance;\n        if (walletId) {\n            const wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n            if (!wallet) {\n                throw new NotFoundError('Wallet not found');\n            }\n            scheduledTransaction.walletId = wallet._id;\n        }\n\n        await scheduledTransaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: scheduledTransaction\n        });\n    } catch (error) {\n        console.error('Error in updateScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete a scheduled transaction\nconst deleteScheduledTransaction = async (req, res) => {\n    try {\n        const scheduledTransaction = await ScheduledTransaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!scheduledTransaction) {\n            throw new NotFoundError('Scheduled transaction not found');\n        }\n\n        await scheduledTransaction.deleteOne();\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteScheduledTransaction:', error);\n        throw error;\n    }\n};\n\n// Execute scheduled transactions for a given day\nconst executeScheduledTransactions = async (dayOfMonth) => {\n    try {\n        const scheduledTransactions = await ScheduledTransaction.find({\n            dayOfMonth,\n            isActive: true\n        });\n\n        for (const scheduled of scheduledTransactions) {\n            // Check if already executed this month\n            const now = new Date();\n            const lastExecuted = scheduled.lastExecuted;\n            if (lastExecuted && \n                lastExecuted.getMonth() === now.getMonth() && \n                lastExecuted.getFullYear() === now.getFullYear()) {\n                continue;\n            }\n\n            // Create the actual transaction\n            const transaction = await Transaction.create({\n                userId: scheduled.userId,\n                walletId: scheduled.walletId,\n                type: scheduled.type,\n                amount: scheduled.amount,\n                category: scheduled.category,\n                description: scheduled.description,\n                date: new Date(),\n                affectBalance: scheduled.affectBalance\n            });\n\n            // Update wallet balance if needed\n            if (scheduled.affectBalance) {\n                const wallet = await Wallet.findById(scheduled.walletId);\n                if (wallet) {\n                    if (scheduled.type === 'income') {\n                        wallet.balance += scheduled.amount;\n                    } else {\n                        if (wallet.balance < scheduled.amount) {\n                            console.error(`Insufficient balance for scheduled transaction ${scheduled._id}`);\n                            continue;\n                        }\n                        wallet.balance -= scheduled.amount;\n                    }\n                    wallet.lastUpdated = new Date();\n                    await wallet.save();\n                }\n            }\n\n            // Update last executed date\n            scheduled.lastExecuted = new Date();\n            await scheduled.save();\n        }\n    } catch (error) {\n        console.error('Error executing scheduled transactions:', error);\n    }\n};\n\nmodule.exports = {\n    getScheduledTransactions,\n    createScheduledTransaction,\n    updateScheduledTransaction,\n    deleteScheduledTransaction,\n    executeScheduledTransactions\n}; ",
          "controllers/transactionController.js": "const Transaction = require('../models/Transaction');\nconst Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all transactions\nconst getTransactions = async (req, res) => {\n    try {\n        const { month, year, type, category, walletId } = req.query;\n        const query = { userId: req.user.userId };\n\n        // Add filters if provided\n        if (month && year) {\n            const startDate = new Date(year, month - 1, 1);\n            const endDate = new Date(year, month, 0);\n            query.date = { $gte: startDate, $lte: endDate };\n        }\n        if (type) query.type = type;\n        if (category) query.category = category;\n        if (walletId) query.walletId = walletId;\n\n        const transactions = await Transaction.find(query).sort({ date: -1 });\n\n        // Calculate totals\n        const totals = transactions.reduce((acc, transaction) => {\n            if (transaction.type === 'income') {\n                acc.income += transaction.amount;\n            } else {\n                acc.expense += transaction.amount;\n            }\n            return acc;\n        }, { income: 0, expense: 0 });\n\n        res.status(200).json({\n            success: true,\n            count: transactions.length,\n            totals,\n            data: transactions\n        });\n    } catch (error) {\n        console.error('Error in getTransactions:', error);\n        throw error;\n    }\n};\n\n// Get single transaction\nconst getTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in getTransaction:', error);\n        throw error;\n    }\n};\n\n// Add transaction\nconst addTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n\n        // Validate required fields\n        if (!type || !amount || !category) {\n            throw new BadRequestError('Please provide type, amount and category');\n        }\n\n        // Validate amount\n        if (amount <= 0) {\n            throw new BadRequestError('Amount must be greater than 0');\n        }\n\n        // Validate type\n        if (!['income', 'expense'].includes(type)) {\n            throw new BadRequestError('Type must be either income or expense');\n        }\n\n        // Find wallet - use provided walletId or default wallet\n        let wallet;\n        if (walletId) {\n            wallet = await Wallet.findOne({\n                _id: walletId,\n                userId: req.user.userId\n            });\n        } else {\n            // Find default wallet\n            wallet = await Wallet.findOne({\n                userId: req.user.userId,\n                isDefault: true\n            });\n        }\n\n        if (!wallet) {\n            throw new NotFoundError('No wallet found. Please create a wallet first.');\n        }\n\n        // Create transaction\n        const transaction = await Transaction.create({\n            userId: req.user.userId,\n            walletId: wallet._id,\n            type,\n            amount,\n            category,\n            description: description || '', // Make description optional\n            date: date || Date.now(),\n            affectBalance: affectBalance !== undefined ? affectBalance : true\n        });\n\n        // Update wallet balance only if affectBalance is true\n        if (affectBalance !== false) {\n            if (type === 'income') {\n                wallet.balance += amount;\n            } else {\n                if (wallet.balance < amount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                wallet.balance -= amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(201).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in addTransaction:', error);\n        throw error;\n    }\n};\n\n// Update transaction\nconst updateTransaction = async (req, res) => {\n    try {\n        const { type, amount, category, description, date, walletId, affectBalance } = req.body;\n        \n        console.log('Debug - Update Transaction Request:');\n        console.log('Transaction ID from params:', req.params.id);\n        console.log('User ID from request:', req.user.userId);\n        console.log('Request body:', req.body);\n\n        // Validate transaction ID\n        if (!req.params.id) {\n            throw new BadRequestError('Transaction ID is required');\n        }\n\n        // Find the transaction and log the query\n        const transactionQuery = {\n            _id: req.params.id,\n            userId: req.user.userId\n        };\n        console.log('Finding transaction with query:', transactionQuery);\n\n        const transaction = await Transaction.findOne(transactionQuery);\n        console.log('Found transaction:', transaction ? {\n            id: transaction._id,\n            type: transaction.type,\n            amount: transaction.amount,\n            walletId: transaction.walletId,\n            userId: transaction.userId\n        } : 'No transaction found');\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Find the current wallet\n        const oldWallet = await Wallet.findOne({\n            _id: transaction.walletId,\n            userId: req.user.userId\n        });\n\n        if (!oldWallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // Find the new wallet if walletId is provided\n        let newWallet = oldWallet;\n        if (walletId) {\n            // Safely compare wallet IDs\n            const currentWalletId = transaction.walletId.toString();\n            const newWalletId = walletId.toString();\n            \n            console.log('Wallet ID comparison:', {\n                currentWalletId,\n                newWalletId,\n                isDifferent: newWalletId !== currentWalletId\n            });\n            \n            if (newWalletId !== currentWalletId) {\n                newWallet = await Wallet.findOne({\n                    _id: walletId,\n                    userId: req.user.userId\n                });\n                console.log('Found new wallet:', newWallet ? {\n                    id: newWallet._id,\n                    name: newWallet.name,\n                    balance: newWallet.balance\n                } : 'No new wallet found');\n                \n                if (!newWallet) {\n                    throw new NotFoundError('New wallet not found');\n                }\n            }\n        }\n\n        // Calculate balance changes\n        const oldAmount = transaction.amount;\n        const newAmount = amount || oldAmount;\n        const oldType = transaction.type;\n        const newType = type || oldType;\n        const oldAffectBalance = transaction.affectBalance;\n        const newAffectBalance = affectBalance !== undefined ? affectBalance : oldAffectBalance;\n\n        // Update old wallet balance if the old transaction affected balance\n        if (oldAffectBalance) {\n            if (oldType === 'income') {\n                oldWallet.balance -= oldAmount;\n            } else {\n                oldWallet.balance += oldAmount;\n            }\n            oldWallet.lastUpdated = Date.now();\n            await oldWallet.save();\n        }\n\n        // Update new wallet balance if the new transaction should affect balance\n        if (newAffectBalance) {\n            if (newType === 'income') {\n                newWallet.balance += newAmount;\n            } else {\n                if (newWallet.balance < newAmount) {\n                    throw new BadRequestError('Insufficient balance in wallet');\n                }\n                newWallet.balance -= newAmount;\n            }\n            newWallet.lastUpdated = Date.now();\n            await newWallet.save();\n        }\n\n        // Update transaction\n        if (type) transaction.type = type;\n        if (amount) transaction.amount = amount;\n        if (category) transaction.category = category;\n        if (description !== undefined) transaction.description = description;\n        if (date) transaction.date = date;\n        if (walletId) transaction.walletId = walletId;\n        if (affectBalance !== undefined) transaction.affectBalance = affectBalance;\n\n        await transaction.save();\n\n        res.status(200).json({\n            success: true,\n            data: transaction\n        });\n    } catch (error) {\n        console.error('Error in updateTransaction:', error);\n        throw error;\n    }\n};\n\n// Delete transaction\nconst deleteTransaction = async (req, res) => {\n    try {\n        const transaction = await Transaction.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!transaction) {\n            throw new NotFoundError('Transaction not found');\n        }\n\n        // Update wallet balance only if the transaction affected balance\n        if (transaction.affectBalance) {\n            const wallet = await Wallet.findOne({\n                _id: transaction.walletId,\n                userId: req.user.userId\n            });\n\n            if (transaction.type === 'income') {\n                wallet.balance -= transaction.amount;\n            } else {\n                wallet.balance += transaction.amount;\n            }\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        // Use deleteOne instead of remove\n        await Transaction.deleteOne({ _id: transaction._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteTransaction:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getTransactions,\n    getTransaction,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction\n};\n",
          "controllers/walletController.js": "const Wallet = require('../models/Wallet');\nconst { BadRequestError, NotFoundError } = require('../errors');\n\n// Get all wallets for a user\nconst getWallets = async (req, res) => {\n    try {\n        const wallets = await Wallet.find({ userId: req.user.userId });\n        res.status(200).json({\n            success: true,\n            count: wallets.length,\n            data: wallets\n        });\n    } catch (error) {\n        console.error('Error in getWallets:', error);\n        throw error;\n    }\n};\n\n// Get single wallet\nconst getWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in getWallet:', error);\n        throw error;\n    }\n};\n\n// Create new wallet\nconst createWallet = async (req, res) => {\n    try {\n        const { name, currency, balance, isDefault } = req.body;\n\n        // Validate required fields\n        if (!name || !currency) {\n            throw new BadRequestError('Please provide name and currency');\n        }\n\n        // Validate balance if provided\n        if (balance !== undefined && balance < 0) {\n            throw new BadRequestError('Balance cannot be negative');\n        }\n\n        // If this is set as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        // Create wallet\n        const wallet = await Wallet.create({\n            userId: req.user.userId,\n            name,\n            currency,\n            balance: balance || 0,\n            isDefault: isDefault || false\n        });\n\n        res.status(201).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in createWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Set initial balance\nconst setInitialBalance = async (req, res) => {\n    try {\n        const { balance, currency } = req.body;\n\n        if (!balance || balance < 0) {\n            throw new BadRequestError('Please provide a valid initial balance');\n        }\n\n        // Find or create default wallet\n        let wallet = await Wallet.findOne({\n            userId: req.user.userId,\n            isDefault: true\n        });\n\n        if (!wallet) {\n            wallet = await Wallet.create({\n                userId: req.user.userId,\n                balance,\n                currency: currency || 'USD',\n                isDefault: true,\n                name: 'Main Wallet'\n            });\n        } else {\n            wallet.balance = balance;\n            if (currency) wallet.currency = currency;\n            wallet.lastUpdated = Date.now();\n            await wallet.save();\n        }\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in setInitialBalance:', error);\n        throw error;\n    }\n};\n\n// Update wallet\nconst updateWallet = async (req, res) => {\n    try {\n        const { name, currency, isDefault } = req.body;\n\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        // If setting as default, unset any existing default wallet\n        if (isDefault) {\n            await Wallet.updateMany(\n                { userId: req.user.userId, isDefault: true },\n                { isDefault: false }\n            );\n        }\n\n        if (name) wallet.name = name;\n        if (currency) wallet.currency = currency;\n        if (typeof isDefault === 'boolean') wallet.isDefault = isDefault;\n        wallet.lastUpdated = Date.now();\n\n        await wallet.save();\n\n        res.status(200).json({\n            success: true,\n            data: wallet\n        });\n    } catch (error) {\n        console.error('Error in updateWallet:', error);\n        if (error.code === 11000) {\n            throw new BadRequestError('A default wallet already exists');\n        }\n        throw error;\n    }\n};\n\n// Delete wallet\nconst deleteWallet = async (req, res) => {\n    try {\n        const wallet = await Wallet.findOne({\n            _id: req.params.id,\n            userId: req.user.userId\n        });\n\n        if (!wallet) {\n            throw new NotFoundError('Wallet not found');\n        }\n\n        if (wallet.isDefault) {\n            throw new BadRequestError('Cannot delete default wallet');\n        }\n\n        await Wallet.deleteOne({ _id: wallet._id });\n\n        res.status(200).json({\n            success: true,\n            data: {}\n        });\n    } catch (error) {\n        console.error('Error in deleteWallet:', error);\n        throw error;\n    }\n};\n\nmodule.exports = {\n    getWallets,\n    getWallet,\n    createWallet,\n    setInitialBalance,\n    updateWallet,\n    deleteWallet\n}; ",
          "errors.js": "class CustomError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n\nclass BadRequestError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 400;\n    }\n}\n\nclass UnauthorizedError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 401;\n    }\n}\n\nclass ForbiddenError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 403;\n    }\n}\n\nclass NotFoundError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 404;\n    }\n}\n\nclass ConflictError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 409;\n    }\n}\n\nclass InternalServerError extends CustomError {\n    constructor(message) {\n        super(message);\n        this.statusCode = 500;\n    }\n}\n\nmodule.exports = {\n    BadRequestError,\n    UnauthorizedError,\n    ForbiddenError,\n    NotFoundError,\n    ConflictError,\n    InternalServerError\n}; ",
          "index.js": "const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst connectDB = require('./config/db');\nconst errorHandler = require('./middleware/error');\nconst authRoutes = require('./routes/auth');\nconst transactionRoutes = require('./routes/transactions');\nconst budgetRoutes = require('./routes/budget');\nconst categoryRoutes = require('./routes/categories');\nconst walletRoutes = require('./routes/wallets');\nconst scheduledTransactionRoutes = require('./routes/scheduledTransactions');\n\n// Load env vars\ndotenv.config();\n\n// Connect to database\nconnectDB();\n\nconst app = express();\n\n// CORS configuration\napp.use(cors({\n    origin: '*', // Allow all origins\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],\n    credentials: true,\n    maxAge: 86400 // 24 hours\n}));\n\n// Body parser\napp.use(express.json());\n\n// Mount routers\napp.use('/api/auth', authRoutes);\napp.use('/api/transactions', transactionRoutes);\napp.use('/api/budget', budgetRoutes);\napp.use('/api/categories', categoryRoutes);\napp.use('/api/wallets', walletRoutes);\napp.use('/api/scheduled-transactions', scheduledTransactionRoutes);\n\n// Error handler (should be last piece of middleware)\napp.use((err, req, res, next) => {\n    console.error(err);\n\n    // Handle custom errors\n    if (err.statusCode) {\n        return res.status(err.statusCode).json({\n            success: false,\n            error: err.message\n        });\n    }\n\n    // Handle mongoose validation errors\n    if (err.name === 'ValidationError') {\n        const messages = Object.values(err.errors).map(val => val.message);\n        return res.status(400).json({\n            success: false,\n            error: messages\n        });\n    }\n\n    // Handle mongoose duplicate key errors\n    if (err.code === 11000) {\n        return res.status(400).json({\n            success: false,\n            error: 'Duplicate field value entered'\n        });\n    }\n\n    // Handle mongoose cast errors\n    if (err.name === 'CastError') {\n        return res.status(400).json({\n            success: false,\n            error: 'Invalid ID format'\n        });\n    }\n\n    // Default error\n    res.status(500).json({\n        success: false,\n        error: 'Server Error'\n    });\n});\n\nconst PORT = process.env.PORT || 5000;\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (err, promise) => {\n  console.log(`Error: ${err.message}`);\n  // Close server & exit process\n  process.exit(1);\n});\n",
          "middleware/authentication.js": "const jwt = require('jsonwebtoken');\nconst { UnauthorizedError } = require('../errors');\n\nconst authenticateUser = async (req, res, next) => {\n    try {\n        // Get token from header\n        const authHeader = req.headers.authorization;\n        console.log('Auth header:', authHeader);\n        \n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.log('Invalid auth header format');\n            throw new UnauthorizedError('Authentication invalid');\n        }\n\n        const token = authHeader.split(' ')[1];\n        console.log('Token:', token);\n\n        try {\n            const payload = jwt.verify(token, process.env.JWT_SECRET);\n            console.log('Token payload:', payload);\n            \n            // Check if payload has the required fields\n            if (!payload.id) {\n                console.log('Missing id in token payload');\n                throw new UnauthorizedError('Invalid token payload');\n            }\n\n            // Attach the user to the request object\n            req.user = {\n                userId: payload.id,\n                name: payload.name\n            };\n            \n            next();\n        } catch (error) {\n            console.error('JWT verification error:', error);\n            throw new UnauthorizedError('Authentication invalid');\n        }\n    } catch (error) {\n        console.error('Authentication error:', error);\n        next(error);\n    }\n};\n\nmodule.exports = {\n    authenticateUser\n}; ",
          "middleware/error.js": "const ErrorResponse = require('../utils/errorResponse');\n\nconst errorHandler = (err, req, res, next) => {\n  let error = { ...err };\n  error.message = err.message;\n\n  // Log to console for dev\n  console.error(err);\n\n  // Mongoose bad ObjectId\n  if (err.name === 'CastError') {\n    const message = `Resource not found`;\n    error = new ErrorResponse(message, 404);\n  }\n\n  // Mongoose duplicate key\n  if (err.code === 11000) {\n    const message = 'Duplicate field value entered';\n    error = new ErrorResponse(message, 400);\n  }\n\n  // Mongoose validation error\n  if (err.name === 'ValidationError') {\n    const message = Object.values(err.errors).map(val => val.message);\n    error = new ErrorResponse(message, 400);\n  }\n\n  res.status(error.statusCode || 500).json({\n    success: false,\n    error: error.message || 'Server Error',\n    stack: process.env.NODE_ENV === 'development' ? err.stack : undefined\n  });\n};\n\nmodule.exports = errorHandler; ",
          "models/Budget.js": "const mongoose = require('mongoose');\n\nconst budgetSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  category: { type: String, required: true },\n  limit: { type: Number, required: true },\n  month: { type: Number, required: true }, // 1–12\n  year: { type: Number, required: true },\n}, { timestamps: true });\n\nmodule.exports = mongoose.model('Budget', budgetSchema);\n",
          "models/Category.js": "const mongoose = require('mongoose');\n\nconst categorySchema = new mongoose.Schema({\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  name: {\n    type: String,\n    required: [true, 'Please provide a category name'],\n    trim: true\n  },\n  type: {\n    type: String,\n    enum: ['income', 'expense'],\n    required: [true, 'Please specify if this is an income or expense category']\n  },\n  icon: {\n    type: String,\n    default: 'default' // You can use this to store icon names or emojis\n  },\n  color: {\n    type: String,\n    default: '#000000' // Default color in hex\n  },\n  isDefault: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true\n});\n\n// Compound index to ensure unique category names per user\ncategorySchema.index({ userId: 1, name: 1 }, { unique: true });\n\nmodule.exports = mongoose.model('Category', categorySchema); ",
          "models/ScheduledTransaction.js": "const mongoose = require('mongoose');\n\nconst scheduledTransactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 },\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  dayOfMonth: { type: Number, required: true, min: 1, max: 31 },\n  isActive: { type: Boolean, default: true },\n  lastExecuted: { type: Date },\n  affectBalance: { type: Boolean, default: true },\n}, { timestamps: true });\n\n// Index for efficient querying\nscheduledTransactionSchema.index({ userId: 1, dayOfMonth: 1 });\nscheduledTransactionSchema.index({ isActive: 1 });\n\nconst ScheduledTransaction = mongoose.model('ScheduledTransaction', scheduledTransactionSchema);\n\nmodule.exports = ScheduledTransaction; ",
          "models/Transaction.js": "const mongoose = require('mongoose');\n\nconst transactionSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  walletId: { type: mongoose.Schema.Types.ObjectId, ref: 'Wallet', required: true },\n  type: { type: String, enum: ['income', 'expense'], required: true },\n  amount: { type: Number, required: true, min: 0 }, // store as cents if needed\n  category: { type: String, required: true },\n  description: { type: String, default: '' },\n  date: { type: Date, default: Date.now },\n}, { timestamps: true });\n\n// Index for efficient querying\ntransactionSchema.index({ userId: 1, date: -1 });\ntransactionSchema.index({ userId: 1, walletId: 1, date: -1 });\n\nmodule.exports = mongoose.model('Transaction', transactionSchema);\n",
          "models/User.js": "const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Please add a name'],\n  },\n  email: {\n    type: String,\n    required: [true, 'Please add an email'],\n    unique: true,\n    match: [\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Please add a valid email',\n    ],\n  },\n  password: {\n    type: String,\n    required: [true, 'Please add a password'],\n    minlength: 6,\n    select: false,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n// Encrypt password using bcrypt\nUserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) {\n    next();\n  }\n\n  const salt = await bcrypt.genSalt(10);\n  this.password = await bcrypt.hash(this.password, salt);\n});\n\n// Match user entered password to hashed password in database\nUserSchema.methods.comparePassword = async function (enteredPassword) {\n  return await bcrypt.compare(enteredPassword, this.password);\n};\n\n// Sign JWT and return\nUserSchema.methods.getSignedJwtToken = function () {\n  return jwt.sign({ id: this._id }, process.env.JWT_SECRET, {\n    expiresIn: process.env.JWT_EXPIRE,\n  });\n};\n\nmodule.exports = mongoose.model('User', UserSchema); ",
          "models/Wallet.js": "const mongoose = require('mongoose');\n\nconst walletSchema = new mongoose.Schema({\n    userId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    balance: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    currency: {\n        type: String,\n        required: true,\n        default: 'USD'\n    },\n    name: {\n        type: String,\n        required: true,\n        default: 'Main Wallet'\n    },\n    isDefault: {\n        type: Boolean,\n        default: true\n    },\n    lastUpdated: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n\n// Ensure a user can only have one default wallet\nwalletSchema.index({ userId: 1, isDefault: 1 }, { \n    unique: true,\n    partialFilterExpression: { isDefault: true }\n});\n\nmodule.exports = mongoose.model('Wallet', walletSchema); ",
          "package-lock.json": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"budget-tracker\",\n      \"version\": \"1.0.0\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"bcryptjs\": \"^2.4.3\",\n        \"cors\": \"^2.8.5\",\n        \"dotenv\": \"^16.0.3\",\n        \"express\": \"^4.18.2\",\n        \"jsonwebtoken\": \"^9.0.0\",\n        \"mongoose\": \"^7.0.3\",\n        \"next-themes\": \"^0.4.6\",\n        \"node-cron\": \"^4.1.0\",\n        \"recharts\": \"^2.15.3\",\n        \"validator\": \"^13.9.0\"\n      },\n      \"devDependencies\": {\n        \"nodemon\": \"^2.0.22\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz\",\n      \"integrity\": \"sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@mongodb-js/saslprep\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz\",\n      \"integrity\": \"sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"sparse-bitfield\": \"^3.0.3\"\n      }\n    },\n    \"node_modules/@types/d3-array\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz\",\n      \"integrity\": \"sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-color\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz\",\n      \"integrity\": \"sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-ease\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz\",\n      \"integrity\": \"sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-interpolate\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz\",\n      \"integrity\": \"sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-color\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-path\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz\",\n      \"integrity\": \"sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-scale\": {\n      \"version\": \"4.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz\",\n      \"integrity\": \"sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-time\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-shape\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz\",\n      \"integrity\": \"sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/d3-path\": \"*\"\n      }\n    },\n    \"node_modules/@types/d3-time\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz\",\n      \"integrity\": \"sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/d3-timer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz\",\n      \"integrity\": \"sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"24.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-24.0.1.tgz\",\n      \"integrity\": \"sha512-MX4Zioh39chHlDJbKmEgydJDS3tspMP/lnQC67G3SWsTnb9NeYVWOjkxpOSy4oMfPs4StcWHwBrvUb4ybfnuaw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"undici-types\": \"~7.8.0\"\n      }\n    },\n    \"node_modules/@types/webidl-conversions\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz\",\n      \"integrity\": \"sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/whatwg-url\": {\n      \"version\": \"8.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz\",\n      \"integrity\": \"sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"@types/webidl-conversions\": \"*\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/bcryptjs\": {\n      \"version\": \"2.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\n      \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.13.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/body-parser/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bson\": {\n      \"version\": \"5.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/bson/-/bson-5.5.1.tgz\",\n      \"integrity\": \"sha512-ix0EwukN2EpC0SRWIj/7B5+A6uQMQy6KMREI9qQqvgpkV2frH63T0UDVd1SYedL6dNCmDBYB3QtXi4ISk9YT+g==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      }\n    },\n    \"node_modules/buffer-equal-constant-time\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\n      \"integrity\": \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/clsx\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz\",\n      \"integrity\": \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/cors\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"object-assign\": \"^4\",\n        \"vary\": \"^1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/d3-array\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz\",\n      \"integrity\": \"sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"internmap\": \"1 - 2\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-color\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz\",\n      \"integrity\": \"sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-ease\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz\",\n      \"integrity\": \"sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-format\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz\",\n      \"integrity\": \"sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-interpolate\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz\",\n      \"integrity\": \"sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-color\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-path\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz\",\n      \"integrity\": \"sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-scale\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz\",\n      \"integrity\": \"sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2.10.0 - 3\",\n        \"d3-format\": \"1 - 3\",\n        \"d3-interpolate\": \"1.2.0 - 3\",\n        \"d3-time\": \"2.1.1 - 3\",\n        \"d3-time-format\": \"2 - 4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-shape\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz\",\n      \"integrity\": \"sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-path\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz\",\n      \"integrity\": \"sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-array\": \"2 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-time-format\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz\",\n      \"integrity\": \"sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"d3-time\": \"1 - 3\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/d3-timer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz\",\n      \"integrity\": \"sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decimal.js-light\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz\",\n      \"integrity\": \"sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/dom-helpers\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz\",\n      \"integrity\": \"sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.7\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz\",\n      \"integrity\": \"sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://dotenvx.com\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ecdsa-sig-formatter\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\n      \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/eventemitter3\": {\n      \"version\": \"4.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz\",\n      \"integrity\": \"sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.3\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.7.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.3.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.3\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.12\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.13.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.19.0\",\n        \"serve-static\": \"1.16.2\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/express\"\n      }\n    },\n    \"node_modules/express/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/express/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-equals\": {\n      \"version\": \"5.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz\",\n      \"integrity\": \"sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ignore-by-default\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/internmap\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz\",\n      \"integrity\": \"sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonwebtoken\": {\n      \"version\": \"9.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\n      \"integrity\": \"sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jws\": \"^3.2.2\",\n        \"lodash.includes\": \"^4.3.0\",\n        \"lodash.isboolean\": \"^3.0.3\",\n        \"lodash.isinteger\": \"^4.0.4\",\n        \"lodash.isnumber\": \"^3.0.3\",\n        \"lodash.isplainobject\": \"^4.0.6\",\n        \"lodash.isstring\": \"^4.0.1\",\n        \"lodash.once\": \"^4.0.0\",\n        \"ms\": \"^2.1.1\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"engines\": {\n        \"node\": \">=12\",\n        \"npm\": \">=6\"\n      }\n    },\n    \"node_modules/jwa\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz\",\n      \"integrity\": \"sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-equal-constant-time\": \"^1.0.1\",\n        \"ecdsa-sig-formatter\": \"1.0.11\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/jws\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\n      \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jwa\": \"^1.4.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/kareem\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz\",\n      \"integrity\": \"sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==\",\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.includes\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz\",\n      \"integrity\": \"sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isboolean\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz\",\n      \"integrity\": \"sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isinteger\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz\",\n      \"integrity\": \"sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isnumber\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz\",\n      \"integrity\": \"sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isplainobject\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz\",\n      \"integrity\": \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.isstring\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz\",\n      \"integrity\": \"sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.once\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/memory-pager\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz\",\n      \"integrity\": \"sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==\",\n      \"license\": \"MIT\",\n      \"optional\": true\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/mongodb\": {\n      \"version\": \"5.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb/-/mongodb-5.9.2.tgz\",\n      \"integrity\": \"sha512-H60HecKO4Bc+7dhOv4sJlgvenK4fQNqqUIlXxZYQNbfEWSALGAwGoyJd/0Qwk4TttFXUOHJ2ZJQe/52ScaUwtQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"mongodb-connection-string-url\": \"^2.6.0\",\n        \"socks\": \"^2.7.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"optionalDependencies\": {\n        \"@mongodb-js/saslprep\": \"^1.1.0\"\n      },\n      \"peerDependencies\": {\n        \"@aws-sdk/credential-providers\": \"^3.188.0\",\n        \"@mongodb-js/zstd\": \"^1.0.0\",\n        \"kerberos\": \"^1.0.0 || ^2.0.0\",\n        \"mongodb-client-encryption\": \">=2.3.0 <3\",\n        \"snappy\": \"^7.2.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@aws-sdk/credential-providers\": {\n          \"optional\": true\n        },\n        \"@mongodb-js/zstd\": {\n          \"optional\": true\n        },\n        \"kerberos\": {\n          \"optional\": true\n        },\n        \"mongodb-client-encryption\": {\n          \"optional\": true\n        },\n        \"snappy\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/mongodb-connection-string-url\": {\n      \"version\": \"2.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz\",\n      \"integrity\": \"sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@types/whatwg-url\": \"^8.2.1\",\n        \"whatwg-url\": \"^11.0.0\"\n      }\n    },\n    \"node_modules/mongoose\": {\n      \"version\": \"7.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/mongoose/-/mongoose-7.8.7.tgz\",\n      \"integrity\": \"sha512-5Bo4CrUxrPITrhMKsqUTOkXXo2CoRC5tXxVQhnddCzqDMwRXfyStrxj1oY865g8gaekSBhxAeNkYyUSJvGm9Hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bson\": \"^5.5.0\",\n        \"kareem\": \"2.5.1\",\n        \"mongodb\": \"5.9.2\",\n        \"mpath\": \"0.9.0\",\n        \"mquery\": \"5.0.0\",\n        \"ms\": \"2.1.3\",\n        \"sift\": \"16.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.20.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/mongoose\"\n      }\n    },\n    \"node_modules/mpath\": {\n      \"version\": \"0.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz\",\n      \"integrity\": \"sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/mquery\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz\",\n      \"integrity\": \"sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"4.x\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/next-themes\": {\n      \"version\": \"0.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz\",\n      \"integrity\": \"sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"react\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\"\n      }\n    },\n    \"node_modules/node-cron\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-cron/-/node-cron-4.1.0.tgz\",\n      \"integrity\": \"sha512-OS+3ORu+h03/haS6Di8Qr7CrVs4YaKZZOynZwQpyPZDnR3tqRbwJmuP2gVR16JfhLgyNlloAV1VTrrWlRogCFA==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/nodemon\": {\n      \"version\": \"2.0.22\",\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-2.0.22.tgz\",\n      \"integrity\": \"sha512-B8YqaKMmyuCO7BowF1Z1/mkPqLk6cs/l63Ojtd6otKjMx47Dq1utxfRxcavH1I7VSaL8n5BUaoutadnsX3AAVQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chokidar\": \"^3.5.2\",\n        \"debug\": \"^3.2.7\",\n        \"ignore-by-default\": \"^1.0.1\",\n        \"minimatch\": \"^3.1.2\",\n        \"pstree.remy\": \"^1.1.8\",\n        \"semver\": \"^5.7.1\",\n        \"simple-update-notifier\": \"^1.0.7\",\n        \"supports-color\": \"^5.5.0\",\n        \"touch\": \"^3.1.0\",\n        \"undefsafe\": \"^2.0.5\"\n      },\n      \"bin\": {\n        \"nodemon\": \"bin/nodemon.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/nodemon\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/pstree.remy\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/react\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-19.1.0.tgz\",\n      \"integrity\": \"sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"19.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz\",\n      \"integrity\": \"sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"scheduler\": \"^0.26.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^19.1.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/react-smooth\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz\",\n      \"integrity\": \"sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-equals\": \"^5.0.1\",\n        \"prop-types\": \"^15.8.1\",\n        \"react-transition-group\": \"^4.4.5\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/react-transition-group\": {\n      \"version\": \"4.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz\",\n      \"integrity\": \"sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.5.5\",\n        \"dom-helpers\": \"^5.0.1\",\n        \"loose-envify\": \"^1.4.0\",\n        \"prop-types\": \"^15.6.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.6.0\",\n        \"react-dom\": \">=16.6.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/recharts\": {\n      \"version\": \"2.15.3\",\n      \"resolved\": \"https://registry.npmjs.org/recharts/-/recharts-2.15.3.tgz\",\n      \"integrity\": \"sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"clsx\": \"^2.0.0\",\n        \"eventemitter3\": \"^4.0.1\",\n        \"lodash\": \"^4.17.21\",\n        \"react-is\": \"^18.3.1\",\n        \"react-smooth\": \"^4.0.4\",\n        \"recharts-scale\": \"^0.4.4\",\n        \"tiny-invariant\": \"^1.3.1\",\n        \"victory-vendor\": \"^36.6.8\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n        \"react-dom\": \"^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/recharts-scale\": {\n      \"version\": \"0.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz\",\n      \"integrity\": \"sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"decimal.js-light\": \"^2.4.1\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.26.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz\",\n      \"integrity\": \"sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/send/node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sift\": {\n      \"version\": \"16.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sift/-/sift-16.0.1.tgz\",\n      \"integrity\": \"sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/simple-update-notifier\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz\",\n      \"integrity\": \"sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"semver\": \"~7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/simple-update-notifier/node_modules/semver\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.0.0.tgz\",\n      \"integrity\": \"sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.5.tgz\",\n      \"integrity\": \"sha512-iF+tNDQla22geJdTyJB1wM/qrX9DMRwWrciEPwWLPRWAUEM8sQiyxgckLxWT1f7+9VabJS0jTGGr4QgBuvi6Ww==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/sparse-bitfield\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz\",\n      \"integrity\": \"sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"memory-pager\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tiny-invariant\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz\",\n      \"integrity\": \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/touch\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.1.tgz\",\n      \"integrity\": \"sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"nodetouch\": \"bin/nodetouch.js\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz\",\n      \"integrity\": \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/undefsafe\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"7.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\",\n      \"integrity\": \"sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/validator\": {\n      \"version\": \"13.15.15\",\n      \"resolved\": \"https://registry.npmjs.org/validator/-/validator-13.15.15.tgz\",\n      \"integrity\": \"sha512-BgWVbCI72aIQy937xbawcs+hrVaN/CZ2UwutgaJ36hGqRrLNM+f5LUT/YPRbo8IV/ASeFzXszezV+y2+rq3l8A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/victory-vendor\": {\n      \"version\": \"36.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz\",\n      \"integrity\": \"sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==\",\n      \"license\": \"MIT AND ISC\",\n      \"dependencies\": {\n        \"@types/d3-array\": \"^3.0.3\",\n        \"@types/d3-ease\": \"^3.0.0\",\n        \"@types/d3-interpolate\": \"^3.0.1\",\n        \"@types/d3-scale\": \"^4.0.2\",\n        \"@types/d3-shape\": \"^3.1.0\",\n        \"@types/d3-time\": \"^3.0.0\",\n        \"@types/d3-timer\": \"^3.0.0\",\n        \"d3-array\": \"^3.1.6\",\n        \"d3-ease\": \"^3.0.1\",\n        \"d3-interpolate\": \"^3.0.1\",\n        \"d3-scale\": \"^4.0.2\",\n        \"d3-shape\": \"^3.1.0\",\n        \"d3-time\": \"^3.0.0\",\n        \"d3-timer\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"11.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz\",\n      \"integrity\": \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tr46\": \"^3.0.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    }\n  }\n}\n",
          "package.json": "{\n  \"name\": \"budget-tracker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A budget tracking application\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"dev\": \"nodemon index.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bcryptjs\": \"^2.4.3\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.0.3\",\n    \"express\": \"^4.18.2\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"mongoose\": \"^7.0.3\",\n    \"next-themes\": \"^0.4.6\",\n    \"node-cron\": \"^4.1.0\",\n    \"recharts\": \"^2.15.3\",\n    \"validator\": \"^13.9.0\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.22\"\n  }\n}\n",
          "server.js": "const scheduledTransactionsRouter = require('./routes/scheduledTransactions');\nconst { scheduleDailyCheck } = require('./utils/scheduler');\n\n// Routes\napp.use('/api/auth', authRouter);\napp.use('/api/transactions', transactionsRouter);\napp.use('/api/budgets', budgetsRouter);\napp.use('/api/categories', categoriesRouter);\napp.use('/api/wallets', walletsRouter);\napp.use('/api/scheduled-transactions', scheduledTransactionsRouter);\n\n// Start the scheduler\nscheduleDailyCheck(); ",
          "utils/debugTransaction.js": "// Debug utility for transaction updates\nexport const debugTransactionUpdate = async (transactionId, updateData) => {\n    try {\n        console.log('Debug - Transaction Update Request:');\n        console.log('Transaction ID:', transactionId);\n        console.log('Update Data:', updateData);\n        \n        // Log the full request details\n        const requestDetails = {\n            url: `/api/transactions/${transactionId}`,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            data: updateData\n        };\n        \n        console.log('Full Request Details:', requestDetails);\n        \n        // Make the actual request\n        const response = await fetch(requestDetails.url, {\n            method: requestDetails.method,\n            headers: requestDetails.headers,\n            body: JSON.stringify(requestDetails.data)\n        });\n        \n        // Log response details\n        console.log('Response Status:', response.status);\n        const responseData = await response.json();\n        console.log('Response Data:', responseData);\n        \n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        return responseData;\n    } catch (error) {\n        console.error('Debug - Transaction Update Error:', error);\n        throw error;\n    }\n}; ",
          "utils/errorResponse.js": "class ErrorResponse extends Error {\n  constructor(message, statusCode) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n\nmodule.exports = ErrorResponse; ",
          "utils/scheduler.js": "const cron = require('node-cron');\nconst { executeScheduledTransactions } = require('../controllers/scheduledTransactionController');\n\n// Run every day at midnight\nconst scheduleDailyCheck = () => {\n    cron.schedule('0 0 * * *', async () => {\n        const today = new Date();\n        const dayOfMonth = today.getDate();\n        \n        console.log(`Executing scheduled transactions for day ${dayOfMonth}`);\n        await executeScheduledTransactions(dayOfMonth);\n    });\n};\n\nmodule.exports = {\n    scheduleDailyCheck\n}; "
        },
        "analysis": {
          "projectPurpose": "Web Application",
          "mainFeatures": [
            "MongoDB Database",
            "User Authentication",
            "User Management",
            "Budget Tracking",
            "Transaction Management",
            "Scheduled Tasks",
            "Transaction Processing",
            "API Endpoints",
            "Database Configuration"
          ],
          "technologyStack": [
            "Express.js",
            "Node.js",
            "MongoDB"
          ],
          "architecture": "Express.js Backend",
          "complexity": "moderate",
          "description": "A budget tracking application",
          "keyFiles": [
            "config/db.js",
            "package.json",
            "index.js",
            "server.js"
          ]
        }
      }
    }
  }
}